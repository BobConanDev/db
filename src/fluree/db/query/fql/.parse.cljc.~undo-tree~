(undo-tree-save-format-version . 1)
"ee39c230f4cb984c07b39cc1f310c798aaa11f2a"
[nil nil nil nil (26062 36751 122138 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 15364 . 15365) (nil fontified nil 15338 . 15365) (15338 . 15365)) nil (26062 36751 121922 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . -15211) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (15191 . 15212) (15186 . 15191) (t 26062 36751 124217 997000)) nil (26062 36887 631189 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -15478) (#("    " 0 4 (fontified nil)) . -15437) (15410 . 15513) (#("(do (println (-> q
                                  (dissoc :selectOne)
                                  (assoc :select-one select)))
                     (-> q
                         (dissoc :selectOne)
                         (assoc :select-one select)))" 0 1 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 1 3 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 3 4 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 5 12 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 12 13 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 13 14 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 14 16 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 16 19 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 19 53 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 53 54 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 54 60 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 60 61 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 61 62 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 62 71 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 71 73 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 73 107 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 107 108 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 108 113 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 113 114 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 114 115 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 115 125 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 125 134 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 134 136 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 136 157 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 157 158 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 158 160 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 160 163 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 163 188 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 188 189 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 189 195 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 195 196 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 196 197 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 197 206 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 206 208 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 208 233 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 233 234 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 234 239 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 239 240 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 240 241 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 241 251 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 251 259 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 259 260 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 260 261 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . 15410) (undo-tree-id16444 . -157) (undo-tree-id16445 . -157) (undo-tree-id16446 . -226) (undo-tree-id16447 . -226) (undo-tree-id16448 . -226) (undo-tree-id16449 . -226) (undo-tree-id16450 . -226) (undo-tree-id16451 . -226) (undo-tree-id16452 . -226) (undo-tree-id16453 . -226) (undo-tree-id16454 . -181) (undo-tree-id16455 . -181) (undo-tree-id16456 . -181) (undo-tree-id16457 . -181) (undo-tree-id16458 . -181) (undo-tree-id16459 . -181) (undo-tree-id16460 . -181) (undo-tree-id16461 . -154) (undo-tree-id16462 . -154) (undo-tree-id16463 . -154) (undo-tree-id16464 . -154) (undo-tree-id16465 . -154) (undo-tree-id16466 . -154) (undo-tree-id16467 . -154) (undo-tree-id16468 . -91) (undo-tree-id16469 . -91) (undo-tree-id16470 . -91) (undo-tree-id16471 . -91) (undo-tree-id16472 . -91) (undo-tree-id16473 . -91) (undo-tree-id16474 . -91) (undo-tree-id16475 . -37) (undo-tree-id16476 . -37) (undo-tree-id16477 . -37) (undo-tree-id16478 . -37) (undo-tree-id16479 . -37) (undo-tree-id16480 . -37) (undo-tree-id16481 . -37) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -37) (undo-tree-id16519 . -37) (undo-tree-id16520 . -37) (undo-tree-id16521 . -37) (undo-tree-id16522 . -37) (undo-tree-id16523 . -37) (undo-tree-id16524 . -37) (undo-tree-id16525 . -37) (undo-tree-id16526 . -37) (undo-tree-id16527 . -37) (undo-tree-id16528 . -37) (undo-tree-id16529 . -37) (undo-tree-id16530 . -37) (undo-tree-id16531 . -37) (undo-tree-id16532 . -91) (undo-tree-id16533 . -91) (undo-tree-id16534 . -91) (undo-tree-id16535 . -91) (undo-tree-id16536 . -91) (undo-tree-id16537 . -91) (undo-tree-id16538 . -91) (undo-tree-id16539 . -91) (undo-tree-id16540 . -91) (undo-tree-id16541 . -91) (undo-tree-id16542 . -91) (undo-tree-id16543 . -91) (undo-tree-id16544 . -91) (undo-tree-id16545 . -91) (undo-tree-id16546 . -154) (undo-tree-id16547 . -154) (undo-tree-id16548 . -154) (undo-tree-id16549 . -154) (undo-tree-id16550 . -154) (undo-tree-id16551 . -154) (undo-tree-id16552 . -154) (undo-tree-id16553 . -154) (undo-tree-id16554 . -154) (undo-tree-id16555 . -154) (undo-tree-id16556 . -154) (undo-tree-id16557 . -154) (undo-tree-id16558 . -154) (undo-tree-id16559 . -154) (undo-tree-id16560 . -155) (undo-tree-id16561 . -155) (undo-tree-id16562 . -155) (undo-tree-id16563 . -155) (undo-tree-id16564 . -155) (undo-tree-id16565 . -155) (undo-tree-id16566 . -155) (undo-tree-id16567 . -155) (undo-tree-id16568 . -155) (undo-tree-id16569 . -155) (undo-tree-id16570 . -155) (undo-tree-id16571 . -155) (undo-tree-id16572 . -155) (undo-tree-id16573 . -155) (undo-tree-id16574 . -155) (undo-tree-id16575 . -156) (undo-tree-id16576 . -156) (undo-tree-id16577 . -156) (undo-tree-id16578 . -156) (undo-tree-id16579 . -156) (undo-tree-id16580 . -156) (undo-tree-id16581 . -156) (undo-tree-id16582 . -156) (undo-tree-id16583 . -156) (undo-tree-id16584 . -156) (undo-tree-id16585 . -156) (undo-tree-id16586 . -156) (undo-tree-id16587 . -156) (undo-tree-id16588 . -156) (undo-tree-id16589 . -156) (undo-tree-id16590 . -136) (undo-tree-id16591 . -157) (undo-tree-id16592 . -157) (undo-tree-id16593 . -157) (undo-tree-id16594 . -157) (undo-tree-id16595 . -157) (undo-tree-id16596 . -157) (undo-tree-id16597 . -157) (undo-tree-id16598 . -157) (undo-tree-id16599 . 104) (undo-tree-id16600 . -158) (undo-tree-id16601 . 2) (undo-tree-id16602 . -260) (undo-tree-id16603 . 104) (undo-tree-id16604 . -158) (undo-tree-id16605 . 103) (undo-tree-id16606 . -259) (undo-tree-id16607 . 2) (undo-tree-id16608 . -260) (undo-tree-id16609 . -157) (undo-tree-id16610 . -157) (undo-tree-id16611 . -157) (undo-tree-id16612 . -157) (undo-tree-id16613 . -157) (undo-tree-id16614 . -157) (undo-tree-id16615 . -157) (undo-tree-id16616 . -157) (undo-tree-id16617 . -157) (undo-tree-id16618 . -157) (undo-tree-id16619 . -157) (undo-tree-id16620 . -157) (undo-tree-id16621 . -157) (undo-tree-id16622 . -157) (undo-tree-id16623 . -157) (undo-tree-id16624 . -157) (undo-tree-id16625 . -157) (undo-tree-id16626 . -157) (undo-tree-id16627 . -157) (undo-tree-id16628 . -157) (undo-tree-id16629 . -157) (undo-tree-id16630 . -157) (undo-tree-id16631 . -134) (undo-tree-id16632 . -135) (undo-tree-id16633 . -259) (undo-tree-id16634 . -260) (undo-tree-id16635 . -258) (undo-tree-id16636 . -259) (undo-tree-id16637 . -233) (undo-tree-id16638 . -234) (undo-tree-id16639 . -206) (undo-tree-id16640 . -207) (undo-tree-id16641 . -188) (undo-tree-id16642 . -189) (undo-tree-id16643 . -157) (undo-tree-id16644 . -158) (undo-tree-id16645 . -134) (undo-tree-id16646 . -135) (undo-tree-id16647 . -133) (undo-tree-id16648 . -134) (undo-tree-id16649 . -132) (undo-tree-id16650 . -133) (undo-tree-id16651 . -107) (undo-tree-id16652 . -108) (undo-tree-id16653 . -71) (undo-tree-id16654 . -72) (undo-tree-id16655 . -53) (undo-tree-id16656 . -54) (undo-tree-id16657 . -13) (undo-tree-id16658 . -14) (undo-tree-id16659 . -4) (undo-tree-id16660 . -5) (undo-tree-id16661 . -1) (undo-tree-id16662 . -134) (undo-tree-id16663 . -135) 15567 (t 26062 36887 632639 720000)) nil (26062 37114 760697 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -15618) (#("    " 0 4 (fontified nil)) . -15567) (15535 . 15658) (#("(do (println (-> q
                                       (dissoc :selectDistinct)
                                       (assoc :select-distinct select)))
                          (-> q
                              (dissoc :selectDistinct)
                              (assoc :select-distinct select)))" 0 1 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 1 3 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 3 4 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 5 12 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 12 13 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 13 14 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 14 16 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 16 19 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 19 58 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 58 59 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 59 65 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 65 66 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 66 67 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 67 81 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 81 83 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 83 122 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 122 123 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 123 128 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 128 129 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 129 130 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 130 145 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 145 154 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 154 156 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 156 182 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 182 183 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 183 185 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 185 188 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 188 219 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 219 225 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 225 226 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 226 227 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 227 241 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 241 243 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 243 274 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 274 279 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 279 280 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 280 281 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 281 296 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face clojure-keyword-face) 296 304 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 304 305 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 305 306 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . 15535) (undo-tree-id16187 . -153) (undo-tree-id16188 . -13) (undo-tree-id16189 . -153) (undo-tree-id16190 . -154) (undo-tree-id16191 . -182) (undo-tree-id16192 . -182) (undo-tree-id16193 . -261) (undo-tree-id16194 . -261) (undo-tree-id16195 . -261) (undo-tree-id16196 . -261) (undo-tree-id16197 . -261) (undo-tree-id16198 . -261) (undo-tree-id16199 . -261) (undo-tree-id16200 . -261) (undo-tree-id16201 . -206) (undo-tree-id16202 . -206) (undo-tree-id16203 . -206) (undo-tree-id16204 . -206) (undo-tree-id16205 . -206) (undo-tree-id16206 . -206) (undo-tree-id16207 . -206) (undo-tree-id16208 . -174) (undo-tree-id16209 . -174) (undo-tree-id16210 . -174) (undo-tree-id16211 . -174) (undo-tree-id16212 . -174) (undo-tree-id16213 . -174) (undo-tree-id16214 . -174) (undo-tree-id16215 . -174) (undo-tree-id16216 . -174) (undo-tree-id16217 . -174) (undo-tree-id16218 . -174) (undo-tree-id16219 . -174) (undo-tree-id16220 . -174) (undo-tree-id16221 . -174) (undo-tree-id16222 . -174) (undo-tree-id16223 . -174) (undo-tree-id16224 . -174) (undo-tree-id16225 . -174) (undo-tree-id16226 . -174) (undo-tree-id16227 . -174) (undo-tree-id16228 . -174) (undo-tree-id16229 . -101) (undo-tree-id16230 . -101) (undo-tree-id16231 . -101) (undo-tree-id16232 . -101) (undo-tree-id16233 . -101) (undo-tree-id16234 . -101) (undo-tree-id16235 . -101) (undo-tree-id16236 . -101) (undo-tree-id16237 . -101) (undo-tree-id16238 . -101) (undo-tree-id16239 . -101) (undo-tree-id16240 . -101) (undo-tree-id16241 . -101) (undo-tree-id16242 . -101) (undo-tree-id16243 . -37) (undo-tree-id16244 . -37) (undo-tree-id16245 . -37) (undo-tree-id16246 . -37) (undo-tree-id16247 . -37) (undo-tree-id16248 . -37) (undo-tree-id16249 . -37) (undo-tree-id16250 . -36) (undo-tree-id16251 . -36) (undo-tree-id16252 . -36) (undo-tree-id16253 . -36) (undo-tree-id16254 . -36) (undo-tree-id16255 . -36) (undo-tree-id16256 . -36) (undo-tree-id16257 . -100) (undo-tree-id16258 . -100) (undo-tree-id16259 . -100) (undo-tree-id16260 . -100) (undo-tree-id16261 . -100) (undo-tree-id16262 . -100) (undo-tree-id16263 . -100) (undo-tree-id16264 . -100) (undo-tree-id16265 . -100) (undo-tree-id16266 . -100) (undo-tree-id16267 . -100) (undo-tree-id16268 . -100) (undo-tree-id16269 . -100) (undo-tree-id16270 . -100) (undo-tree-id16271 . -173) (undo-tree-id16272 . -173) (undo-tree-id16273 . -173) (undo-tree-id16274 . -173) (undo-tree-id16275 . -173) (undo-tree-id16276 . -173) (undo-tree-id16277 . -173) (undo-tree-id16278 . -173) (undo-tree-id16279 . -173) (undo-tree-id16280 . -173) (undo-tree-id16281 . -173) (undo-tree-id16282 . -173) (undo-tree-id16283 . -173) (undo-tree-id16284 . -173) (undo-tree-id16285 . -174) (undo-tree-id16286 . -174) (undo-tree-id16287 . -174) (undo-tree-id16288 . -174) (undo-tree-id16289 . -174) (undo-tree-id16290 . -174) (undo-tree-id16291 . -174) (undo-tree-id16292 . -174) (undo-tree-id16293 . -174) (undo-tree-id16294 . -174) (undo-tree-id16295 . -174) (undo-tree-id16296 . -174) (undo-tree-id16297 . -174) (undo-tree-id16298 . -174) (undo-tree-id16299 . -174) (undo-tree-id16300 . -175) (undo-tree-id16301 . -175) (undo-tree-id16302 . -175) (undo-tree-id16303 . -175) (undo-tree-id16304 . -175) (undo-tree-id16305 . -175) (undo-tree-id16306 . -175) (undo-tree-id16307 . -175) (undo-tree-id16308 . -176) (undo-tree-id16309 . -176) (undo-tree-id16310 . -176) (undo-tree-id16311 . -176) (undo-tree-id16312 . -176) (undo-tree-id16313 . -176) (undo-tree-id16314 . -176) (undo-tree-id16315 . -176) (undo-tree-id16316 . -177) (undo-tree-id16317 . -177) (undo-tree-id16318 . -177) (undo-tree-id16319 . -177) (undo-tree-id16320 . -177) (undo-tree-id16321 . -177) (undo-tree-id16322 . -177) (undo-tree-id16323 . -177) (undo-tree-id16324 . -178) (undo-tree-id16325 . -178) (undo-tree-id16326 . -178) (undo-tree-id16327 . -178) (undo-tree-id16328 . -178) (undo-tree-id16329 . -178) (undo-tree-id16330 . -178) (undo-tree-id16331 . -178) (undo-tree-id16332 . -179) (undo-tree-id16333 . -179) (undo-tree-id16334 . -179) (undo-tree-id16335 . -179) (undo-tree-id16336 . -179) (undo-tree-id16337 . -179) (undo-tree-id16338 . -179) (undo-tree-id16339 . -179) (undo-tree-id16340 . -180) (undo-tree-id16341 . -180) (undo-tree-id16342 . -180) (undo-tree-id16343 . -180) (undo-tree-id16344 . -180) (undo-tree-id16345 . -180) (undo-tree-id16346 . -180) (undo-tree-id16347 . -180) (undo-tree-id16348 . -180) (undo-tree-id16349 . -180) (undo-tree-id16350 . -180) (undo-tree-id16351 . -180) (undo-tree-id16352 . -180) (undo-tree-id16353 . -180) (undo-tree-id16354 . -180) (undo-tree-id16355 . -181) (undo-tree-id16356 . -181) (undo-tree-id16357 . -181) (undo-tree-id16358 . -181) (undo-tree-id16359 . -181) (undo-tree-id16360 . -181) (undo-tree-id16361 . -181) (undo-tree-id16362 . -181) (undo-tree-id16363 . -181) (undo-tree-id16364 . -181) (undo-tree-id16365 . -181) (undo-tree-id16366 . -181) (undo-tree-id16367 . -181) (undo-tree-id16368 . -181) (undo-tree-id16369 . -181) (undo-tree-id16370 . -156) (undo-tree-id16371 . -182) (undo-tree-id16372 . -182) (undo-tree-id16373 . -182) (undo-tree-id16374 . -182) (undo-tree-id16375 . -182) (undo-tree-id16376 . -182) (undo-tree-id16377 . -182) (undo-tree-id16378 . -182) (undo-tree-id16379 . 124) (undo-tree-id16380 . -183) (undo-tree-id16381 . 123) (undo-tree-id16382 . -304) (undo-tree-id16383 . 2) (undo-tree-id16384 . -305) (undo-tree-id16385 . -182) (undo-tree-id16386 . -182) (undo-tree-id16387 . -182) (undo-tree-id16388 . -182) (undo-tree-id16389 . -182) (undo-tree-id16390 . -182) (undo-tree-id16391 . -182) (undo-tree-id16392 . -182) (undo-tree-id16393 . -182) (undo-tree-id16394 . -182) (undo-tree-id16395 . -182) (undo-tree-id16396 . -182) (undo-tree-id16397 . -182) (undo-tree-id16398 . -182) (undo-tree-id16399 . 124) (undo-tree-id16400 . -183) (undo-tree-id16401 . 2) (undo-tree-id16402 . -305) (undo-tree-id16403 . -182) (undo-tree-id16404 . -182) (undo-tree-id16405 . -182) (undo-tree-id16406 . -182) (undo-tree-id16407 . -182) (undo-tree-id16408 . -182) (undo-tree-id16409 . -182) (undo-tree-id16410 . -182) (undo-tree-id16411 . -154) (undo-tree-id16412 . -155) (undo-tree-id16413 . -304) (undo-tree-id16414 . -305) (undo-tree-id16415 . -303) (undo-tree-id16416 . -304) (undo-tree-id16417 . -273) (undo-tree-id16418 . -274) (undo-tree-id16419 . -241) (undo-tree-id16420 . -242) (undo-tree-id16421 . -218) (undo-tree-id16422 . -219) (undo-tree-id16423 . -182) (undo-tree-id16424 . -183) (undo-tree-id16425 . -154) (undo-tree-id16426 . -155) (undo-tree-id16427 . -153) (undo-tree-id16428 . -154) (undo-tree-id16429 . -152) (undo-tree-id16430 . -153) (undo-tree-id16431 . -122) (undo-tree-id16432 . -123) (undo-tree-id16433 . -81) (undo-tree-id16434 . -82) (undo-tree-id16435 . -58) (undo-tree-id16436 . -59) (undo-tree-id16437 . -13) (undo-tree-id16438 . -14) (undo-tree-id16439 . -4) (undo-tree-id16440 . -5) (undo-tree-id16441 . -1) (undo-tree-id16442 . -154) (undo-tree-id16443 . -155) 15717) nil (26062 37114 760612 0) 0 nil])
([nil nil ((15292 . 15319) (#("(do (println (assoc q select-key select))
                             (assoc q select-key select))" 0 1 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 1 3 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-keyword-face) 3 4 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 5 12 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 12 13 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 13 14 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 14 19 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 19 40 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 40 42 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 42 71 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 71 72 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 72 77 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 77 97 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 97 98 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 98 99 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . 15292) (undo-tree-id15938 . -71) (undo-tree-id15939 . -97) (undo-tree-id15940 . -13) (undo-tree-id15941 . 59) (undo-tree-id15942 . -39) (undo-tree-id15943 . -13) (undo-tree-id15944 . -13) (undo-tree-id15945 . -39) (undo-tree-id15946 . -4) (undo-tree-id15947 . -39) (undo-tree-id15948 . -13) (undo-tree-id15949 . -39) (undo-tree-id15950 . -71) (undo-tree-id15951 . -71) (undo-tree-id15952 . -60) (undo-tree-id15953 . -60) (undo-tree-id15954 . -60) (undo-tree-id15955 . -60) (undo-tree-id15956 . -60) (undo-tree-id15957 . -60) (undo-tree-id15958 . -60) (undo-tree-id15959 . -60) (undo-tree-id15960 . -60) (undo-tree-id15961 . -60) (undo-tree-id15962 . -60) (undo-tree-id15963 . -60) (undo-tree-id15964 . -60) (undo-tree-id15965 . -60) (undo-tree-id15966 . -60) (undo-tree-id15967 . -64) (undo-tree-id15968 . -64) (undo-tree-id15969 . -64) (undo-tree-id15970 . -64) (undo-tree-id15971 . -64) (undo-tree-id15972 . -64) (undo-tree-id15973 . -64) (undo-tree-id15974 . -64) (undo-tree-id15975 . -64) (undo-tree-id15976 . -64) (undo-tree-id15977 . -64) (undo-tree-id15978 . -64) (undo-tree-id15979 . -64) (undo-tree-id15980 . -64) (undo-tree-id15981 . -64) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -2) (undo-tree-id15991 . -2) (undo-tree-id15992 . -2) (undo-tree-id15993 . -2) (undo-tree-id15994 . -2) (undo-tree-id15995 . -2) (undo-tree-id15996 . -2) (undo-tree-id15997 . -2) (undo-tree-id15998 . -3) (undo-tree-id15999 . -3) (undo-tree-id16000 . -3) (undo-tree-id16001 . -3) (undo-tree-id16002 . -3) (undo-tree-id16003 . -3) (undo-tree-id16004 . -3) (undo-tree-id16005 . -3) (undo-tree-id16006 . -4) (undo-tree-id16007 . -4) (undo-tree-id16008 . -4) (undo-tree-id16009 . -4) (undo-tree-id16010 . -4) (undo-tree-id16011 . -4) (undo-tree-id16012 . -4) (undo-tree-id16013 . -4) (undo-tree-id16014 . -4) (undo-tree-id16015 . -4) (undo-tree-id16016 . -4) (undo-tree-id16017 . -4) (undo-tree-id16018 . -4) (undo-tree-id16019 . -4) (undo-tree-id16020 . -4) (undo-tree-id16021 . -71) (undo-tree-id16022 . -71) (undo-tree-id16023 . -71) (undo-tree-id16024 . -71) (undo-tree-id16025 . -71) (undo-tree-id16026 . -71) (undo-tree-id16027 . -71) (undo-tree-id16028 . -71) (undo-tree-id16029 . -71) (undo-tree-id16030 . -71) (undo-tree-id16031 . -71) (undo-tree-id16032 . -71) (undo-tree-id16033 . -71) (undo-tree-id16034 . -71) (undo-tree-id16035 . -71) (undo-tree-id16036 . -71) (undo-tree-id16037 . -71) (undo-tree-id16038 . -71) (undo-tree-id16039 . -71) (undo-tree-id16040 . -71) (undo-tree-id16041 . -71) (undo-tree-id16042 . -71) (undo-tree-id16043 . -71) (undo-tree-id16044 . -71) (undo-tree-id16045 . -71) (undo-tree-id16046 . -71) (undo-tree-id16047 . -71) (undo-tree-id16048 . -71) (undo-tree-id16049 . -72) (undo-tree-id16050 . -72) (undo-tree-id16051 . -72) (undo-tree-id16052 . -72) (undo-tree-id16053 . -72) (undo-tree-id16054 . -72) (undo-tree-id16055 . -72) (undo-tree-id16056 . -72) (undo-tree-id16057 . -72) (undo-tree-id16058 . -72) (undo-tree-id16059 . -72) (undo-tree-id16060 . -72) (undo-tree-id16061 . -72) (undo-tree-id16062 . -72) (undo-tree-id16063 . -72) (undo-tree-id16064 . -72) (undo-tree-id16065 . -72) (undo-tree-id16066 . -72) (undo-tree-id16067 . -72) (undo-tree-id16068 . -72) (undo-tree-id16069 . -72) (undo-tree-id16070 . -72) (undo-tree-id16071 . -71) (undo-tree-id16072 . -71) (undo-tree-id16073 . -71) (undo-tree-id16074 . -71) (undo-tree-id16075 . -71) (undo-tree-id16076 . -71) (undo-tree-id16077 . -71) (undo-tree-id16078 . -71) (undo-tree-id16079 . -71) (undo-tree-id16080 . -71) (undo-tree-id16081 . -71) (undo-tree-id16082 . -71) (undo-tree-id16083 . -71) (undo-tree-id16084 . -71) (undo-tree-id16085 . -71) (undo-tree-id16086 . -71) (undo-tree-id16087 . -71) (undo-tree-id16088 . -71) (undo-tree-id16089 . -71) (undo-tree-id16090 . -71) (undo-tree-id16091 . -71) (undo-tree-id16092 . -71) (undo-tree-id16093 . -71) (undo-tree-id16094 . -71) (undo-tree-id16095 . -71) (undo-tree-id16096 . -71) (undo-tree-id16097 . -71) (undo-tree-id16098 . -71) (undo-tree-id16099 . -71) (undo-tree-id16100 . -72) (undo-tree-id16101 . -72) (undo-tree-id16102 . -72) (undo-tree-id16103 . -72) (undo-tree-id16104 . -72) (undo-tree-id16105 . -72) (undo-tree-id16106 . -72) (undo-tree-id16107 . -72) (undo-tree-id16108 . -72) (undo-tree-id16109 . -72) (undo-tree-id16110 . -72) (undo-tree-id16111 . -72) (undo-tree-id16112 . -72) (undo-tree-id16113 . -72) (undo-tree-id16114 . -72) (undo-tree-id16115 . -72) (undo-tree-id16116 . -72) (undo-tree-id16117 . -72) (undo-tree-id16118 . -72) (undo-tree-id16119 . -72) (undo-tree-id16120 . -72) (undo-tree-id16121 . -72) (undo-tree-id16122 . -42) (undo-tree-id16123 . -71) (undo-tree-id16124 . -71) (undo-tree-id16125 . -71) (undo-tree-id16126 . -71) (undo-tree-id16127 . -71) (undo-tree-id16128 . -71) (undo-tree-id16129 . -71) (undo-tree-id16130 . -71) (undo-tree-id16131 . 28) (undo-tree-id16132 . -72) (undo-tree-id16133 . 27) (undo-tree-id16134 . -97) (undo-tree-id16135 . 2) (undo-tree-id16136 . -98) (undo-tree-id16137 . -71) (undo-tree-id16138 . -71) (undo-tree-id16139 . -71) (undo-tree-id16140 . -71) (undo-tree-id16141 . -71) (undo-tree-id16142 . -71) (undo-tree-id16143 . -71) (undo-tree-id16144 . -71) (undo-tree-id16145 . -71) (undo-tree-id16146 . -71) (undo-tree-id16147 . -71) (undo-tree-id16148 . -71) (undo-tree-id16149 . -71) (undo-tree-id16150 . -71) (undo-tree-id16151 . 28) (undo-tree-id16152 . -72) (undo-tree-id16153 . 2) (undo-tree-id16154 . -98) (undo-tree-id16155 . -71) (undo-tree-id16156 . -71) (undo-tree-id16157 . -71) (undo-tree-id16158 . -71) (undo-tree-id16159 . -71) (undo-tree-id16160 . -71) (undo-tree-id16161 . -71) (undo-tree-id16162 . -71) (undo-tree-id16163 . -71) (undo-tree-id16164 . -71) (undo-tree-id16165 . -71) (undo-tree-id16166 . -71) (undo-tree-id16167 . -71) (undo-tree-id16168 . -71) (undo-tree-id16169 . -71) (undo-tree-id16170 . -40) (undo-tree-id16171 . -41) (undo-tree-id16172 . -97) (undo-tree-id16173 . -98) (undo-tree-id16174 . -71) (undo-tree-id16175 . -72) (undo-tree-id16176 . -40) (undo-tree-id16177 . -41) (undo-tree-id16178 . -39) (undo-tree-id16179 . -40) (undo-tree-id16180 . -13) (undo-tree-id16181 . -14) (undo-tree-id16182 . -4) (undo-tree-id16183 . -5) (undo-tree-id16184 . -1) (undo-tree-id16185 . -40) (undo-tree-id16186 . -41) 15363) nil (26062 37114 760512 0) 0 nil])
([nil nil ((#("    (println select-key)
" 0 5 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 5 12 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth") face font-lock-function-name-face) 12 24 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth")) 24 25 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . 15187) (undo-tree-id16664 . 1) (undo-tree-id16665 . -24) (undo-tree-id16666 . -13) (undo-tree-id16667 . -21) (undo-tree-id16668 . -21) (undo-tree-id16669 . -21) (undo-tree-id16670 . -21) (undo-tree-id16671 . -21) (undo-tree-id16672 . -21) (undo-tree-id16673 . -21) (undo-tree-id16674 . -21) (undo-tree-id16675 . -21) (undo-tree-id16676 . -21) (undo-tree-id16677 . -21) (undo-tree-id16678 . -21) (undo-tree-id16679 . -21) (undo-tree-id16680 . -21) (undo-tree-id16681 . -21) (undo-tree-id16682 . -21) (undo-tree-id16683 . -21) (undo-tree-id16684 . -21) (undo-tree-id16685 . -21) (undo-tree-id16686 . -21) (undo-tree-id16687 . -21) (undo-tree-id16688 . -21) (undo-tree-id16689 . -20) (undo-tree-id16690 . -20) (undo-tree-id16691 . -20) (undo-tree-id16692 . -20) (undo-tree-id16693 . -20) (undo-tree-id16694 . -20) (undo-tree-id16695 . -20) (undo-tree-id16696 . -20) (undo-tree-id16697 . -20) (undo-tree-id16698 . -20) (undo-tree-id16699 . -20) (undo-tree-id16700 . -20) (undo-tree-id16701 . -20) (undo-tree-id16702 . -20) (undo-tree-id16703 . -20) (undo-tree-id16704 . -19) (undo-tree-id16705 . -19) (undo-tree-id16706 . -19) (undo-tree-id16707 . -19) (undo-tree-id16708 . -19) (undo-tree-id16709 . -19) (undo-tree-id16710 . -19) (undo-tree-id16711 . -19) (undo-tree-id16712 . -18) (undo-tree-id16713 . -18) (undo-tree-id16714 . -18) (undo-tree-id16715 . -18) (undo-tree-id16716 . -18) (undo-tree-id16717 . -18) (undo-tree-id16718 . -18) (undo-tree-id16719 . -18) (undo-tree-id16720 . -17) (undo-tree-id16721 . -17) (undo-tree-id16722 . -17) (undo-tree-id16723 . -17) (undo-tree-id16724 . -17) (undo-tree-id16725 . -17) (undo-tree-id16726 . -17) (undo-tree-id16727 . -17) (undo-tree-id16728 . -16) (undo-tree-id16729 . -16) (undo-tree-id16730 . -16) (undo-tree-id16731 . -16) (undo-tree-id16732 . -16) (undo-tree-id16733 . -16) (undo-tree-id16734 . -16) (undo-tree-id16735 . -16) (undo-tree-id16736 . -15) (undo-tree-id16737 . -15) (undo-tree-id16738 . -15) (undo-tree-id16739 . -15) (undo-tree-id16740 . -15) (undo-tree-id16741 . -15) (undo-tree-id16742 . -15) (undo-tree-id16743 . -15) (undo-tree-id16744 . -14) (undo-tree-id16745 . -14) (undo-tree-id16746 . -14) (undo-tree-id16747 . -14) (undo-tree-id16748 . -14) (undo-tree-id16749 . -14) (undo-tree-id16750 . -14) (undo-tree-id16751 . -14) (undo-tree-id16752 . -13) (undo-tree-id16753 . -13) (undo-tree-id16754 . -13) (undo-tree-id16755 . -13) (undo-tree-id16756 . -13) (undo-tree-id16757 . -13) (undo-tree-id16758 . -13) (undo-tree-id16759 . -13) (undo-tree-id16760 . -13) (undo-tree-id16761 . -13) (undo-tree-id16762 . -13) (undo-tree-id16763 . -13) (undo-tree-id16764 . -13) (undo-tree-id16765 . -13) (undo-tree-id16766 . -13) (undo-tree-id16767 . -13) (undo-tree-id16768 . -13) (undo-tree-id16769 . -13) (undo-tree-id16770 . -13) (undo-tree-id16771 . -13) (undo-tree-id16772 . -13) (undo-tree-id16773 . -13) (undo-tree-id16774 . -13) (undo-tree-id16775 . -13) (undo-tree-id16776 . -13) (undo-tree-id16777 . -13) (undo-tree-id16778 . -13) (undo-tree-id16779 . -13) (undo-tree-id16780 . -13) (undo-tree-id16781 . -13) (undo-tree-id16782 . -25) (undo-tree-id16783 . -25) 15200 (t 26062 37114 763161 283000)) nil (26062 37167 554672 0) 0 nil])
([nil current ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . -14855) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (14854 . 14856) (#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals ("context" "q" "select" "select-key" "depth"))) . -14854) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) 14855 (t 26062 37167 557013 536000)) nil (26062 37199 758438 0) 0 nil])
nil
