(undo-tree-save-format-version . 1)
"8da26b2fb57e945fe30ed723e42e305e94f268f7"
[nil nil nil nil (26062 35506 975990 0) 0 nil]
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11628) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (11619 . 11629) (#("L" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11619) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) 11620 (11611 . 11620)) nil (26062 35539 79363 0) 0 nil] [nil nil ((#("\"?o\"" 0 4 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . 11641) (undo-tree-id15594 . -4) (undo-tree-id15595 . -3) (undo-tree-id15596 . -3)) ((11641 . 11645)) (26062 35506 615583 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11613) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (11611 . 11614)) nil (26062 35539 79349 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11639) (undo-tree-id15575 . -1) (11639 . 11640) (#("," 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11639) (undo-tree-id15576 . -1) (undo-tree-id15577 . -1) (undo-tree-id15578 . -1) (undo-tree-id15579 . -1) (undo-tree-id15580 . -1) (undo-tree-id15581 . -1) (undo-tree-id15582 . -1) (undo-tree-id15583 . -1) (undo-tree-id15584 . -1) (#(" " 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11640) (undo-tree-id15585 . -1) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -1) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) 11641) ((11639 . 11641) (#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . 11639) (11639 . 11640)) (26062 35506 241876 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11628) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (11626 . 11629)) nil (26062 35539 79345 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11657) (undo-tree-id15574 . -1) (11655 . 11658)) ((#("#_f" 0 2 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo) 2 3 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . 11655) (undo-tree-id15597 . -2) (11657 . 11658)) (26062 35505 950976 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11664) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (11662 . 11665)) nil (26062 35539 79341 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11648) (undo-tree-id15573 . -1) (11646 . 11649)) ((#("#_f" 0 2 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo) 2 3 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . 11646) (11648 . 11649)) (26062 35505 950600 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11686) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (11684 . 11687)) nil (26062 35539 79337 0) 0 nil])
nil
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11677) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) (undo-tree-id15606 . -1) (11675 . 11678) (#("@" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11675) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) (undo-tree-id15632 . -1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1) (undo-tree-id15640 . -1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) (undo-tree-id15662 . -1) (undo-tree-id15663 . -1) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -1) (undo-tree-id15668 . -1) (undo-tree-id15669 . -1) (undo-tree-id15670 . -1) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11676) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11677) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) 11678 (11677 . 11678) (#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11677) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (11675 . 11678)) nil (26062 35539 79327 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -10835) (undo-tree-id15895 . -1) (10831 . 10836) (#("d" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -10831) (undo-tree-id15896 . -1) (#("b" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -10832) (undo-tree-id15897 . -1) (#("1" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -10833) (undo-tree-id15898 . -1) 10834 (10810 . 10821) (#("=" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -10810) (undo-tree-id15899 . -1) 10811 (10810 . 10811) (t 26062 35539 82004 95000)) nil (26062 36898 212500 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11623) (undo-tree-id15892 . -1) (11623 . 11624) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11623) (undo-tree-id15893 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11624) (undo-tree-id15894 . -1) 11625) nil (26062 36898 212496 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11636) (undo-tree-id15889 . -1) (11636 . 11637) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11636) (undo-tree-id15890 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11637) (undo-tree-id15891 . -1) 11638) nil (26062 36898 212494 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11670) (undo-tree-id15886 . -1) (11670 . 11671) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11670) (undo-tree-id15887 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11671) (undo-tree-id15888 . -1) 11672) nil (26062 36898 212491 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11692) (undo-tree-id15883 . -1) (11692 . 11693) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11692) (undo-tree-id15884 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11693) (undo-tree-id15885 . -1) 11694) nil (26062 36898 212488 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11681) (undo-tree-id15880 . -1) (11681 . 11682) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11681) (undo-tree-id15881 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11682) (undo-tree-id15882 . -1) 11683) nil (26062 36898 212486 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11636) (undo-tree-id15879 . -1) (11623 . 11637) (11609 . 11623)) nil (26062 36898 212484 0) 0 nil])
([nil nil ((11631 . 11632) (11636 . 11637) 11631) nil (26062 36898 212483 0) 0 nil])
([nil nil ((#("schema:age" 0 10 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . 11653) (undo-tree-id15875 . -10) (undo-tree-id15876 . -9) (undo-tree-id15877 . -8) (undo-tree-id15878 . -9)) nil (26062 36898 212482 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11655) (undo-tree-id15874 . -1) (11655 . 11656) (11653 . 11655)) nil (26062 36898 212480 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11691) (undo-tree-id15873 . -1) (11687 . 11692) (#("s" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . 11687)) nil (26062 36898 212478 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11697) (undo-tree-id15871 . -1) (11696 . 11698) (#("o" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11696) (undo-tree-id15872 . -1) 11697) nil (26062 36898 212477 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11717) (undo-tree-id15869 . -1) (11716 . 11718) (#("o" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11716) (undo-tree-id15870 . -1) 11717) nil (26062 36898 212476 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11720) (undo-tree-id15867 . -1) (11716 . 11721) (#("p" 0 1 (face font-lock-string-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11716) (undo-tree-id15868 . -1) 11717) nil (26062 36898 212473 0) 0 nil])
([nil nil ((#("f" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11677) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) (undo-tree-id15847 . -1) (11675 . 11678) (#("D" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11675) (undo-tree-id15848 . -1) (undo-tree-id15849 . -1) (undo-tree-id15850 . -1) (undo-tree-id15851 . -1) (undo-tree-id15852 . -1) (undo-tree-id15853 . -1) (undo-tree-id15854 . -1) (undo-tree-id15855 . -1) (undo-tree-id15856 . -1) (undo-tree-id15857 . -1) (undo-tree-id15858 . -1) (undo-tree-id15859 . -1) (undo-tree-id15860 . -1) (undo-tree-id15861 . -1) (undo-tree-id15862 . -1) (undo-tree-id15863 . -1) (undo-tree-id15864 . -1) (undo-tree-id15865 . -1) (undo-tree-id15866 . -1) 11676) nil (26062 36898 212468 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11708) (undo-tree-id16116 . -1) (11706 . 11709) (t 26062 36898 214498 421000)) nil (26062 37216 373930 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11719) (undo-tree-id16112 . -1) (11718 . 11720) (#(")" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11718) (undo-tree-id16113 . -1) (undo-tree-id16114 . 1) (undo-tree-id16115 . -1) 11719 (11717 . 11719)) nil (26062 37216 373929 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11706) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (11706 . 11707) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11706) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) (undo-tree-id16084 . -1) (undo-tree-id16085 . -1) (undo-tree-id16086 . -1) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) 11707 (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . 11707)) nil (26062 37216 373924 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified nil help-echo cider--help-echo)) . -11715) (undo-tree-id15900 . -1) (undo-tree-id15901 . -1) (undo-tree-id15902 . -1) (undo-tree-id15903 . -1) (undo-tree-id15904 . -1) (undo-tree-id15905 . -1) (undo-tree-id15906 . -1) (undo-tree-id15907 . -1) (undo-tree-id15908 . -1) (11715 . 11716) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11715) (undo-tree-id15909 . -1) (undo-tree-id15910 . -1) (undo-tree-id15911 . -1) (undo-tree-id15912 . -1) (undo-tree-id15913 . -1) (undo-tree-id15914 . -1) (undo-tree-id15915 . -1) (undo-tree-id15916 . -1) (undo-tree-id15917 . -1) (undo-tree-id15918 . -1) (undo-tree-id15919 . -1) (undo-tree-id15920 . -1) (undo-tree-id15921 . -1) (undo-tree-id15922 . -1) (undo-tree-id15923 . -1) (undo-tree-id15924 . -1) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (undo-tree-id15946 . -1) (undo-tree-id15947 . -1) (undo-tree-id15948 . -1) (undo-tree-id15949 . -1) (undo-tree-id15950 . -1) (undo-tree-id15951 . -1) (undo-tree-id15952 . -1) (undo-tree-id15953 . -1) (undo-tree-id15954 . -1) (undo-tree-id15955 . -1) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias") fontified t help-echo cider--help-echo)) . -11716) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) 11717) nil (26062 37216 373886 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified nil help-echo cider--help-echo)) . -11708) (undo-tree-id16124 . -1) (11706 . 11709) (t 26062 37216 376616 447000)) nil (26063 35740 323551 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified nil help-echo cider--help-echo)) . -11719) (undo-tree-id16123 . -1) (11717 . 11720)) nil (26063 35740 323550 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified nil help-echo cider--help-echo)) . -11706) (undo-tree-id16120 . -1) (11706 . 11707) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified t help-echo cider--help-echo)) . -11706) (undo-tree-id16121 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified t help-echo cider--help-echo)) . -11707) (undo-tree-id16122 . -1) 11708) nil (26063 35740 323545 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified nil help-echo cider--help-echo)) . -11715) (undo-tree-id16117 . -1) (11715 . 11716) (#("#" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified t help-echo cider--help-echo)) . -11715) (undo-tree-id16118 . -1) (#("_" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified t help-echo cider--help-echo)) . -11716) (undo-tree-id16119 . -1) 11717) nil (26063 35740 323539 0) 0 nil])
([nil nil ((#("f" 0 1 (cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn") fontified nil help-echo cider--help-echo)) . -11706) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (11706 . 11707) 11728 (11722 . 11728) (t 26063 35740 326540 715000)) nil (26063 50833 68518 0) 0 nil])
([nil nil ((#("f" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query") fontified nil help-echo cider--help-echo)) . -11715) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (11712 . 11716) (#("B" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query") fontified t help-echo cider--help-echo)) . -11712) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (#("y" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query") fontified t help-echo cider--help-echo)) . -11713) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) 11714) nil (26063 54741 776582 0) 0 nil] [nil nil ((apply -3 11701 11726 undo--wrap-and-run-primitive-undo 11701 11726 ((11706 . 11709) 11705))) ((apply 3 11701 11723 undo--wrap-and-run-primitive-undo 11701 11723 ((#(";; " 0 3 (face font-lock-comment-delimiter-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query") help-echo cider--help-echo fontified t)) . 11706) 10768)) (t 26063 50561 232148 717000)) (26063 50827 484431 0) 0 nil])
([nil nil ((apply -3 11701 11727 undo--wrap-and-run-primitive-undo 11701 11727 ((11706 . 11709) 11701)) (t 26063 54741 779938 873000)) nil (26063 55835 328790 0) 0 nil])
([nil nil ((apply 3 11701 11722 undo--wrap-and-run-primitive-undo 11701 11722 ((#(";; " 0 3 (face font-lock-comment-delimiter-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query") help-echo cider--help-echo fontified t)) . -11706) 11703)) (t 26063 50561 232148 717000)) ((apply -3 11701 11725 undo--wrap-and-run-primitive-undo 11701 11725 ((11706 . 11709) 10768))) (26063 50827 484205 0) 0 nil])
([nil nil ((apply 3 11701 11723 undo--wrap-and-run-primitive-undo 11701 11723 ((#(";; " 0 3 (face font-lock-comment-delimiter-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn") help-echo cider--help-echo fontified t)) . -11706) 11701)) (t 26063 55835 331185 918000)) nil (26063 56421 182878 0) 0 nil])
nil
([nil nil ((#("distinct" 0 8 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn") fontified t help-echo cider--help-echo)) . 11676) (undo-tree-id16321 . -8) (undo-tree-id16322 . -7) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -2) (undo-tree-id16332 . -2) (undo-tree-id16333 . -2) (undo-tree-id16334 . -2) (undo-tree-id16335 . -2) (undo-tree-id16336 . -2) (undo-tree-id16337 . -2) (undo-tree-id16338 . -2) (undo-tree-id16339 . -3) (undo-tree-id16340 . -3) (undo-tree-id16341 . -3) (undo-tree-id16342 . -3) (undo-tree-id16343 . -3) (undo-tree-id16344 . -3) (undo-tree-id16345 . -3) (undo-tree-id16346 . -3) (undo-tree-id16347 . -3) (undo-tree-id16348 . -3) (undo-tree-id16349 . -3) (undo-tree-id16350 . -3) (undo-tree-id16351 . -3) (undo-tree-id16352 . -3) (undo-tree-id16353 . -3) (undo-tree-id16354 . -3) (undo-tree-id16355 . -8) (undo-tree-id16356 . -7) (t 26063 56421 187573 246000)) nil (26063 57093 386785 0) 0 nil])
([nil nil ((#("f" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn") fontified nil help-echo cider--help-echo)) . -11675) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (11675 . 11676) (#("-" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn") fontified t help-echo cider--help-echo)) . -11675) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) 11676) nil (26063 57093 386766 0) 0 nil])
([nil nil ((apply -3 11692 11718 undo--wrap-and-run-primitive-undo 11692 11718 ((11697 . 11700) 11692)) (t 26063 57093 389078 127000)) nil (26063 57173 843676 0) 0 nil])
([nil nil ((#("f" 0 1 (face clojure-keyword-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn" "format" "_opts" "format" "query" "conn") fontified nil help-echo cider--help-echo)) . -11684) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (11675 . 11685) (t 26063 57173 846169 555000)) nil (26063 57463 453321 0) 0 nil])
([nil nil ((apply 3 11701 11723 undo--wrap-and-run-primitive-undo 11701 11723 ((#(";; " 0 3 (face font-lock-comment-delimiter-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn" "format" "_opts" "format" "query" "conn") fontified t help-echo cider--help-echo)) . -11706) 11703)) (t 26063 57387 117118 34000)) nil (26063 58216 438447 0) 0 nil] [nil nil ((apply 3 11701 11723 undo--wrap-and-run-primitive-undo 11701 11723 ((#(";; " 0 3 (face font-lock-comment-delimiter-face cider-locals ("query" "max-fuel" "db" "query" "db" "max-fuel" "query**" "db*" "q-ctx" "query*" "opts" "t" "did" "query" "format" "_opts" "format" "query" "db" "e" "info-str" "e-data" "opts" "context" "global-t" "aliases" "conn" "db-map" "r" "alias" "query" "conn" "named-aliases" "default-aliases" "query*" "opts" "t" "did" "query" "max-fuel" "query**" "ds" "s-ctx" "query" "conn" "format" "_opts" "format" "query" "conn") fontified t help-echo cider--help-echo)) . -11706) 11701)) (t 26063 57387 117118 34000)) ((apply -3 11701 11726 undo--wrap-and-run-primitive-undo 11701 11726 ((11706 . 11709) 11745))) (26063 57463 453073 0) 0 nil])
([nil nil ((11716 . 11717) (11723 . 11724) (t 26063 58216 441065 731000)) nil (26067 44630 198042 0) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -11729) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (11724 . 11730)) nil (26067 44630 198039 0) 0 nil])
([nil nil ((apply -3 11701 11734 undo--wrap-and-run-primitive-undo 11701 11734 ((11706 . 11709) 11703)) (t 26067 44630 200503 694000)) nil (26067 50829 991187 0) 0 nil])
([nil nil ((apply 3 11701 11730 undo--wrap-and-run-primitive-undo 11701 11730 ((#(";; " 0 3 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-delimiter-face)) . -11706) 11729))) nil (26067 50829 991183 0) 0 nil])
([nil nil ((11716 . 11723) (#("[\"?type\" \"?p\"]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 8 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 8 9 (fontified t help-echo cider--help-echo cider-locals nil) 9 13 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 13 14 (fontified t help-echo cider--help-echo cider-locals nil)) . 11716) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . 1) (undo-tree-id25 . -7) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . 1) 11717 (t 26067 50829 993660 938000)) nil (26068 53666 749621 0) 0 nil])
([nil nil ((11696 . 11697) (11698 . 11699) 11696) nil (26068 53666 749617 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face)) . -11706) (undo-tree-id21 . -1) (11697 . 11707)) nil (26068 53666 749616 0) 0 nil])
([nil nil ((#("distinct" 0 8 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face)) . 11676) (undo-tree-id18 . -8) (undo-tree-id19 . -7) (undo-tree-id20 . -7)) nil (26068 53666 749615 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face)) . -11675) (undo-tree-id9 . -1) (11675 . 11676) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face)) . -11675) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 11676) nil (26068 53672 210287 0) 0 nil])
([nil nil ((#("


(comment

  (println (clojure.core.async/<!!
   (query-connection
    jace/conn
    {\"@context\" [
                 {
                  \"ex\" \"http://example.org/\",
                  \"f\" \"https://ns.flur.ee/ledger#\",
                  \"foaf\" \"http://xmlns.com/foaf/0.1/\",
                  \"owl\" \"http://www.w3.org/2002/07/owl#\",
                  \"rdf\" \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",
                  \"rdfs\" \"http://www.w3.org/2000/01/rdf-schema#\",
                  \"schema\" \"http://schema.org/\",
                  \"sh\" \"http://www.w3.org/ns/shacl#\",
                  \"skos\" \"http://www.w3.org/2008/05/skos#\",
                  \"wiki\" \"https://www.wikidata.org/wiki/\",
                  \"xsd\" \"http://www.w3.org/2001/XMLSchema#\"
                  }
                 ]
     :from \"fluree/myledger3\"
     :where {
             \"@id\" \"?s\"
             \"@type\" \"?type\"
             \"?p\" \"?o\"}
     :select [\"?type\", \"(distinct ?p)\"]
     :group-by \"?type\"
     }
    {})))
  )
" 0 3 (fontified t help-echo cider--help-echo cider-locals nil) 3 4 (fontified t help-echo cider--help-echo cider-locals nil) 4 11 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 11 12 (fontified t help-echo cider--help-echo cider-locals nil) 12 13 (fontified t help-echo cider--help-echo cider-locals nil) 13 16 (fontified t help-echo cider--help-echo cider-locals nil) 16 23 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 23 25 (fontified t help-echo cider--help-echo cider-locals nil) 25 43 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 43 73 (fontified t help-echo cider--help-echo cider-locals nil) 73 77 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 77 88 (fontified t help-echo cider--help-echo cider-locals nil) 88 98 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 98 138 (fontified t help-echo cider--help-echo cider-locals nil) 138 142 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 142 143 (fontified t help-echo cider--help-echo cider-locals nil) 143 164 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 164 184 (fontified t help-echo cider--help-echo cider-locals nil) 184 187 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 187 188 (fontified t help-echo cider--help-echo cider-locals nil) 188 216 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 216 236 (fontified t help-echo cider--help-echo cider-locals nil) 236 242 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 242 243 (fontified t help-echo cider--help-echo cider-locals nil) 243 271 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 271 291 (fontified t help-echo cider--help-echo cider-locals nil) 291 296 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 296 297 (fontified t help-echo cider--help-echo cider-locals nil) 297 329 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 329 349 (fontified t help-echo cider--help-echo cider-locals nil) 349 354 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 354 355 (fontified t help-echo cider--help-echo cider-locals nil) 355 400 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 400 420 (fontified t help-echo cider--help-echo cider-locals nil) 420 426 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 426 427 (fontified t help-echo cider--help-echo cider-locals nil) 427 466 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 466 486 (fontified t help-echo cider--help-echo cider-locals nil) 486 494 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 494 495 (fontified t help-echo cider--help-echo cider-locals nil) 495 515 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 515 535 (fontified t help-echo cider--help-echo cider-locals nil) 535 539 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 539 540 (fontified t help-echo cider--help-echo cider-locals nil) 540 569 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 569 589 (fontified t help-echo cider--help-echo cider-locals nil) 589 595 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 595 596 (fontified t help-echo cider--help-echo cider-locals nil) 596 629 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 629 649 (fontified t help-echo cider--help-echo cider-locals nil) 649 655 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 655 656 (fontified t help-echo cider--help-echo cider-locals nil) 656 688 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 688 708 (fontified t help-echo cider--help-echo cider-locals nil) 708 713 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 713 714 (fontified t help-echo cider--help-echo cider-locals nil) 714 749 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 749 794 (fontified t help-echo cider--help-echo cider-locals nil) 794 795 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 795 799 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 799 800 (fontified t help-echo cider--help-echo cider-locals nil) 800 818 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 818 824 (fontified t help-echo cider--help-echo cider-locals nil) 824 825 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 825 830 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 830 846 (fontified t help-echo cider--help-echo cider-locals nil) 846 851 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 851 852 (fontified t help-echo cider--help-echo cider-locals nil) 852 856 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 856 870 (fontified t help-echo cider--help-echo cider-locals nil) 870 877 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 877 878 (fontified t help-echo cider--help-echo cider-locals nil) 878 885 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 885 899 (fontified t help-echo cider--help-echo cider-locals nil) 899 903 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 903 904 (fontified t help-echo cider--help-echo cider-locals nil) 904 908 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 908 910 (fontified t help-echo cider--help-echo cider-locals nil) 910 915 (fontified t help-echo cider--help-echo cider-locals nil) 915 916 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 916 922 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 922 924 (fontified t help-echo cider--help-echo cider-locals nil) 924 931 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 931 933 (fontified t help-echo cider--help-echo cider-locals nil) 933 934 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 934 944 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 944 946 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 946 947 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 947 948 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 948 950 (fontified t help-echo cider--help-echo cider-locals nil) 950 955 (help-echo cider--help-echo fontified t cider-locals nil) 955 956 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 956 964 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 964 965 (help-echo cider--help-echo fontified t cider-locals nil) 965 972 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 972 973 (help-echo cider--help-echo fontified t cider-locals nil) 973 980 (help-echo cider--help-echo fontified t cider-locals nil) 980 990 (help-echo cider--help-echo fontified t cider-locals nil) 990 994 (help-echo cider--help-echo fontified t cider-locals nil)) . 10753) (undo-tree-id84 . -992) (undo-tree-id85 . -15) (undo-tree-id86 . -989) (undo-tree-id87 . -15) (undo-tree-id88 . -989) (undo-tree-id89 . -15) (undo-tree-id90 . -989) (undo-tree-id91 . -15) (undo-tree-id92 . -989) (undo-tree-id93 . -15) (undo-tree-id94 . -989) (undo-tree-id95 . -15) (undo-tree-id96 . -989) (undo-tree-id97 . -15) (undo-tree-id98 . -989) (undo-tree-id99 . -15) (undo-tree-id100 . -989) (undo-tree-id101 . -15) (undo-tree-id102 . -989) (undo-tree-id103 . -965) (undo-tree-id104 . -965) (undo-tree-id105 . -965) (undo-tree-id106 . -3) (undo-tree-id107 . 1) (undo-tree-id108 . -992) (undo-tree-id109 . -3) (undo-tree-id110 . 72) (undo-tree-id111 . -15) (undo-tree-id112 . -989) (undo-tree-id113 . -15) (undo-tree-id114 . -989) (undo-tree-id115 . -933) (undo-tree-id116 . -934) (undo-tree-id117 . -934) (undo-tree-id118 . -15) (undo-tree-id119 . -989) (undo-tree-id120 . -15) (undo-tree-id121 . -989) (undo-tree-id122 . -922) (undo-tree-id123 . -922) (undo-tree-id124 . -922) (undo-tree-id125 . -15) (undo-tree-id126 . -989) (undo-tree-id127 . -15) (undo-tree-id128 . -15) (undo-tree-id129 . -12) (undo-tree-id130 . -15) (undo-tree-id131 . -3) (undo-tree-id132 . -15) (undo-tree-id133 . -15) (undo-tree-id134 . -15) (undo-tree-id135 . -15) (undo-tree-id136 . -15) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -88) (undo-tree-id173 . -89) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . 991) (undo-tree-id189 . -4) (undo-tree-id190 . 2) (undo-tree-id191 . -993) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -922) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -88) (undo-tree-id211 . -89) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -88) (undo-tree-id237 . -89) (undo-tree-id238 . 991) (undo-tree-id239 . -4) (undo-tree-id240 . 990) (undo-tree-id241 . -992) (undo-tree-id242 . 2) (undo-tree-id243 . -993) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3)) ((10753 . 11747) (t 26068 53667 83263 722000)) (26068 53680 173514 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . -10754) (undo-tree-id329 . -1) (10753 . 10755) (t 26068 53667 83263 722000)) nil (26068 58377 600292 0) 0 nil] [nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . -10754) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (10753 . 10755) (t 26068 53667 83263 722000)) ((#("
f" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . 10753) (undo-tree-id279 . -1) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (10754 . 10755)) (26068 53678 838084 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11743 . 11744) (nil fontified nil 10754 . 11744) (10754 . 11744)) nil (26068 58377 600285 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11743 . 11744) (nil fontified nil 10754 . 11744) (10754 . 11744)) ((#("(comment

  (println (clojure.core.async/<!!
   (query-connection
    jace/conn
    {\"@context\" [
                 {
                  \"ex\" \"http://example.org/\",
                  \"f\" \"https://ns.flur.ee/ledger#\",
                  \"foaf\" \"http://xmlns.com/foaf/0.1/\",
                  \"owl\" \"http://www.w3.org/2002/07/owl#\",
                  \"rdf\" \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",
                  \"rdfs\" \"http://www.w3.org/2000/01/rdf-schema#\",
                  \"schema\" \"http://schema.org/\",
                  \"sh\" \"http://www.w3.org/ns/shacl#\",
                  \"skos\" \"http://www.w3.org/2008/05/skos#\",
                  \"wiki\" \"https://www.wikidata.org/wiki/\",
                  \"xsd\" \"http://www.w3.org/2001/XMLSchema#\"
                  }
                 ]
     :from \"fluree/myledger3\"
     :where {
             \"@id\" \"?s\"
             \"@type\" \"?type\"
             \"?p\" \"?o\"}
     :select [\"?type\", \"(distinct ?p)\"]
     :group-by \"?type\"
     }
    {})))
  )" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 8 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 8 13 (fontified nil help-echo cider--help-echo cider-locals nil) 13 20 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 20 22 (fontified nil help-echo cider--help-echo cider-locals nil) 22 40 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-type-face) 40 70 (fontified nil help-echo cider--help-echo cider-locals nil) 70 74 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-type-face) 74 85 (fontified nil help-echo cider--help-echo cider-locals nil) 85 95 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 95 135 (fontified nil help-echo cider--help-echo cider-locals nil) 135 139 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 139 140 (fontified nil help-echo cider--help-echo cider-locals nil) 140 161 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 161 181 (fontified nil help-echo cider--help-echo cider-locals nil) 181 184 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 184 185 (fontified nil help-echo cider--help-echo cider-locals nil) 185 213 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 213 233 (fontified nil help-echo cider--help-echo cider-locals nil) 233 239 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 239 240 (fontified nil help-echo cider--help-echo cider-locals nil) 240 268 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 268 288 (fontified nil help-echo cider--help-echo cider-locals nil) 288 293 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 293 294 (fontified nil help-echo cider--help-echo cider-locals nil) 294 326 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 326 346 (fontified nil help-echo cider--help-echo cider-locals nil) 346 351 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 351 352 (fontified nil help-echo cider--help-echo cider-locals nil) 352 397 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 397 417 (fontified nil help-echo cider--help-echo cider-locals nil) 417 423 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 423 424 (fontified nil help-echo cider--help-echo cider-locals nil) 424 463 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 463 483 (fontified nil help-echo cider--help-echo cider-locals nil) 483 491 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 491 492 (fontified nil help-echo cider--help-echo cider-locals nil) 492 512 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 512 532 (fontified nil help-echo cider--help-echo cider-locals nil) 532 536 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 536 537 (fontified nil help-echo cider--help-echo cider-locals nil) 537 566 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 566 586 (fontified nil help-echo cider--help-echo cider-locals nil) 586 592 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 592 593 (fontified nil help-echo cider--help-echo cider-locals nil) 593 626 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 626 646 (fontified nil help-echo cider--help-echo cider-locals nil) 646 652 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 652 653 (fontified nil help-echo cider--help-echo cider-locals nil) 653 685 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 685 705 (fontified nil help-echo cider--help-echo cider-locals nil) 705 710 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 710 711 (fontified nil help-echo cider--help-echo cider-locals nil) 711 746 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 746 791 (fontified nil help-echo cider--help-echo cider-locals nil) 791 792 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 792 796 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 796 797 (fontified nil help-echo cider--help-echo cider-locals nil) 797 815 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 815 821 (fontified nil help-echo cider--help-echo cider-locals nil) 821 822 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 822 827 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 827 843 (fontified nil help-echo cider--help-echo cider-locals nil) 843 848 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 848 849 (fontified nil help-echo cider--help-echo cider-locals nil) 849 853 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 853 867 (fontified nil help-echo cider--help-echo cider-locals nil) 867 874 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 874 875 (fontified nil help-echo cider--help-echo cider-locals nil) 875 882 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 882 896 (fontified nil help-echo cider--help-echo cider-locals nil) 896 900 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 900 901 (fontified nil help-echo cider--help-echo cider-locals nil) 901 905 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 905 912 (fontified nil help-echo cider--help-echo cider-locals nil) 912 913 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 913 919 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 919 921 (fontified nil help-echo cider--help-echo cider-locals nil) 921 928 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 928 930 (fontified nil help-echo cider--help-echo cider-locals nil) 930 945 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 945 952 (fontified nil help-echo cider--help-echo cider-locals nil) 952 953 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 953 961 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 961 962 (fontified nil help-echo cider--help-echo cider-locals nil) 962 969 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-string-face) 969 987 (fontified nil help-echo cider--help-echo cider-locals nil) 987 989 (fontified nil help-echo cider--help-echo cider-locals nil) 989 990 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals nil)) . 10754) (undo-tree-id275 . -217) (undo-tree-id276 . -989) (undo-tree-id277 . -215) (undo-tree-id278 . -217) (nil fontified t 11723 . 11741) (nil fontified t 11716 . 11723) (nil fontified t 11715 . 11716) (nil fontified t 11707 . 11715) (nil fontified t 11706 . 11707) (nil fontified t 11699 . 11706) (nil fontified t 11684 . 11699) (nil fontified t 11682 . 11684) (nil fontified t 11675 . 11682) (nil fontified t 11673 . 11675) (nil fontified t 11667 . 11673) (nil fontified t 11666 . 11667) (nil fontified t 11659 . 11666) (nil fontified t 11655 . 11659) (nil fontified t 11654 . 11655) (nil fontified t 11650 . 11654) (nil fontified t 11636 . 11650) (nil fontified t 11629 . 11636) (nil fontified t 11628 . 11629) (nil fontified t 11621 . 11628) (nil fontified t 11607 . 11621) (nil fontified t 11603 . 11607) (nil fontified t 11602 . 11603) (nil fontified t 11597 . 11602) (nil fontified t 11581 . 11597) (nil fontified t 11576 . 11581) (nil fontified t 11575 . 11576) (nil fontified t 11569 . 11575) (nil fontified t 11551 . 11569) (nil fontified t 11550 . 11551) (nil fontified t 11546 . 11550) (nil fontified t 11545 . 11546) (nil fontified t 11500 . 11545) (nil fontified t 11465 . 11500) (nil fontified t 11464 . 11465) (nil fontified t 11459 . 11464) (nil fontified t 11439 . 11459) (nil fontified t 11407 . 11439) (nil fontified t 11406 . 11407) (nil fontified t 11400 . 11406) (nil fontified t 11380 . 11400) (nil fontified t 11347 . 11380) (nil fontified t 11346 . 11347) (nil fontified t 11340 . 11346) (nil fontified t 11320 . 11340) (nil fontified t 11291 . 11320) (nil fontified t 11290 . 11291) (nil fontified t 11286 . 11290) (nil fontified t 11266 . 11286) (nil fontified t 11246 . 11266) (nil fontified t 11245 . 11246) (nil fontified t 11237 . 11245) (nil fontified t 11217 . 11237) (nil fontified t 11178 . 11217) (nil fontified t 11177 . 11178) (nil fontified t 11171 . 11177) (nil fontified t 11151 . 11171) (nil fontified t 11106 . 11151) (nil fontified t 11105 . 11106) (nil fontified t 11100 . 11105) (nil fontified t 11080 . 11100) (nil fontified t 11048 . 11080) (nil fontified t 11047 . 11048) (nil fontified t 11042 . 11047) (nil fontified t 11022 . 11042) (nil fontified t 10994 . 11022) (nil fontified t 10993 . 10994) (nil fontified t 10987 . 10993) (nil fontified t 10967 . 10987) (nil fontified t 10939 . 10967) (nil fontified t 10938 . 10939) (nil fontified t 10935 . 10938) (nil fontified t 10915 . 10935) (nil fontified t 10894 . 10915) (nil fontified t 10893 . 10894) (nil fontified t 10889 . 10893) (nil fontified t 10849 . 10889) (nil fontified t 10839 . 10849) (nil fontified t 10828 . 10839) (nil fontified t 10824 . 10828) (nil fontified t 10794 . 10824) (nil fontified t 10776 . 10794) (nil fontified t 10774 . 10776) (nil fontified t 10767 . 10774) (nil fontified t 10762 . 10767) (nil fontified t 10755 . 10762) (nil fontified t 10754 . 10755) (nil rear-nonsticky t 11743 . 11744)) (26068 53678 837961 0) 0 nil])
([nil current ((11744 . 11745) 11743) nil (26068 58377 600283 0) 0 nil])
nil
nil
