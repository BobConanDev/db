(undo-tree-save-format-version . 1)
"048559a50d1e1130eb05d1bd7057e0457e83f9c3"
[nil nil nil nil (26059 37214 380944 0) 0 nil]
([nil nil ((3731 . 3732) 3730) nil (26059 37218 300523 0) 0 nil] [nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2632) (undo-tree-id347 . -1) (undo-tree-id349 . -1) (undo-tree-id351 . -1) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (undo-tree-id373 . -1) (undo-tree-id375 . -1) (2627 . 2633) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2627) (undo-tree-id377 . -1) (undo-tree-id379 . -1) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (2618 . 2628) (#("M" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2618) (undo-tree-id386 . -1) (undo-tree-id388 . -1) (undo-tree-id390 . -1) (undo-tree-id392 . -1) (undo-tree-id394 . -1) (undo-tree-id396 . -1) (undo-tree-id398 . -1) (undo-tree-id400 . -1) (undo-tree-id402 . -1) (undo-tree-id404 . -1) (undo-tree-id406 . -1) (undo-tree-id408 . -1) 2619 (2609 . 2619) (2608 . 2610) (2599 . 2608) (2600 . 2609) (#("         " 0 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2599) (undo-tree-id410 . -9) (undo-tree-id412 . -5) (undo-tree-id414 . -5) (undo-tree-id416 . -5) (undo-tree-id418 . -5) (undo-tree-id420 . -5) (undo-tree-id422 . -5) (undo-tree-id424 . -5) (undo-tree-id426 . -5) (undo-tree-id428 . -5) (undo-tree-id430 . -5) (undo-tree-id432 . -5) (undo-tree-id434 . -5) (undo-tree-id436 . -5) (undo-tree-id438 . -5) (undo-tree-id440 . -5) (undo-tree-id442 . -5) (undo-tree-id444 . -5) (undo-tree-id446 . -5) (undo-tree-id448 . -5) (undo-tree-id450 . -5) (undo-tree-id452 . -5) (undo-tree-id454 . -5) (undo-tree-id456 . -5) (undo-tree-id458 . -5) (undo-tree-id460 . -5) (undo-tree-id462 . -5) (undo-tree-id464 . -5) (undo-tree-id466 . -5) (undo-tree-id468 . -5) (undo-tree-id470 . -5) (undo-tree-id472 . -5) (undo-tree-id474 . -5) (undo-tree-id476 . -5) (undo-tree-id478 . -5) (undo-tree-id480 . -5) (undo-tree-id482 . -5) (undo-tree-id484 . -5) (undo-tree-id486 . -5) (undo-tree-id488 . -6) (undo-tree-id490 . -6) (undo-tree-id492 . -6) (undo-tree-id494 . -6) (undo-tree-id496 . -6) (undo-tree-id498 . -6) (undo-tree-id500 . -6) (undo-tree-id502 . -6) (undo-tree-id504 . -7) (undo-tree-id506 . -7) (undo-tree-id508 . -7) (undo-tree-id510 . -7) (undo-tree-id512 . -8) (undo-tree-id514 . -8) (undo-tree-id516 . -8) (undo-tree-id518 . -8) (undo-tree-id520 . -9) (undo-tree-id522 . -9) (undo-tree-id524 . -9) (undo-tree-id526 . -9) (undo-tree-id528 . -9) (undo-tree-id530 . -9) (undo-tree-id532 . -9) (undo-tree-id534 . -9) (undo-tree-id536 . -9) (undo-tree-id538 . -9) (undo-tree-id540 . -9) (undo-tree-id542 . -9) (undo-tree-id544 . -9) (undo-tree-id546 . -9) (undo-tree-id548 . -9) (undo-tree-id550 . -9) (2608 . 2609)) ((#("
" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2608) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (2599 . 2608) (#("         " 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 1 9 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2600) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (#("         " 0 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2599) (undo-tree-id4900 . -9) (undo-tree-id4901 . -8) (undo-tree-id4902 . -8) (undo-tree-id4903 . -8) (undo-tree-id4904 . -8) (undo-tree-id4905 . -8) (undo-tree-id4906 . -8) (undo-tree-id4907 . -8) (undo-tree-id4908 . -8) (undo-tree-id4909 . -9) (undo-tree-id4910 . -9) (undo-tree-id4911 . -9) (undo-tree-id4912 . -9) (undo-tree-id4913 . -9) (undo-tree-id4914 . -9) (undo-tree-id4915 . -9) (undo-tree-id4916 . -9) (undo-tree-id4917 . -9) (undo-tree-id4918 . -9) (undo-tree-id4919 . -9) (undo-tree-id4920 . -9) (undo-tree-id4921 . -9) (undo-tree-id4922 . -9) (undo-tree-id4923 . -9) (undo-tree-id4924 . -9) (undo-tree-id4925 . -9) (#("()" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2608) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (#("println \"M" 0 7 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-function-name-face) 7 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 9 10 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2609) (undo-tree-id4936 . -10) (undo-tree-id4937 . -9) (undo-tree-id4938 . -9) (undo-tree-id4939 . -9) (undo-tree-id4940 . -9) (undo-tree-id4941 . -9) (undo-tree-id4942 . -9) (undo-tree-id4943 . -9) (undo-tree-id4944 . -9) (undo-tree-id4945 . -9) (2618 . 2619) (#("JMR read-f" 0 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 9 10 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2618) (undo-tree-id4946 . -10) (undo-tree-id4947 . -9) (undo-tree-id4948 . -9) (undo-tree-id4949 . -9) (undo-tree-id4950 . -9) (undo-tree-id4951 . -9) (undo-tree-id4952 . -9) (undo-tree-id4953 . -9) (undo-tree-id4954 . -9) (undo-tree-id4955 . -9) (2627 . 2628) (#("file\"f" 0 5 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 5 6 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2627) (undo-tree-id4956 . -4) (undo-tree-id4957 . -4) (undo-tree-id4958 . -4) (undo-tree-id4959 . -4) (undo-tree-id4960 . -4) (undo-tree-id4961 . -4) (undo-tree-id4962 . -4) (undo-tree-id4963 . -4) (undo-tree-id4964 . -4) (undo-tree-id4965 . -4) (2632 . 2633)) (26059 37214 345868 0) 0 nil] [nil nil ((#("FileNotFoundException" 0 21 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2682) (undo-tree-id9 . -21) (undo-tree-id11 . -1) (undo-tree-id13 . -1) (undo-tree-id15 . -1) (undo-tree-id17 . -1) (undo-tree-id19 . -2) (undo-tree-id21 . -2) (undo-tree-id23 . -2) (undo-tree-id25 . -2) (undo-tree-id27 . -3) (undo-tree-id29 . -3) (undo-tree-id31 . -3) (undo-tree-id33 . -3) (undo-tree-id35 . -4) (undo-tree-id37 . -4) (undo-tree-id39 . -4) (undo-tree-id41 . -4) (undo-tree-id43 . -5) (undo-tree-id45 . -5) (undo-tree-id47 . -5) (undo-tree-id49 . -5) (undo-tree-id51 . -5) (undo-tree-id53 . -5) (undo-tree-id55 . -5) (undo-tree-id57 . -5) (undo-tree-id59 . -5) (undo-tree-id61 . -5) (undo-tree-id63 . -5) (undo-tree-id65 . -5) (undo-tree-id67 . -5) (undo-tree-id69 . -5) (undo-tree-id71 . -5) (undo-tree-id73 . -5) (undo-tree-id75 . -5) (undo-tree-id77 . -5) (undo-tree-id79 . -5) (undo-tree-id81 . -5) (undo-tree-id83 . -5) (undo-tree-id85 . -5) (undo-tree-id87 . -5) (undo-tree-id89 . -5) (undo-tree-id91 . -5) (undo-tree-id93 . -5) (undo-tree-id95 . -5) (undo-tree-id97 . -5) (undo-tree-id99 . -5) (undo-tree-id101 . -5) (undo-tree-id103 . -5) (undo-tree-id105 . -5) (undo-tree-id107 . -5) (undo-tree-id109 . -5) (undo-tree-id111 . -5) (undo-tree-id113 . -5) (undo-tree-id115 . -5) (undo-tree-id117 . -5) (undo-tree-id119 . -5) (undo-tree-id121 . -5) (undo-tree-id123 . -5) (undo-tree-id125 . -5) (undo-tree-id127 . -5) (undo-tree-id129 . -5) (undo-tree-id131 . -5) (undo-tree-id133 . -5) (undo-tree-id135 . -5) (undo-tree-id137 . -5) (undo-tree-id139 . -5) (undo-tree-id141 . -5) (undo-tree-id143 . -5) (undo-tree-id145 . -5) (undo-tree-id147 . -5) (undo-tree-id149 . -5) (undo-tree-id151 . -5) (undo-tree-id153 . -5) (undo-tree-id155 . -5) (undo-tree-id157 . -5) (undo-tree-id159 . -5) (undo-tree-id161 . -5) (undo-tree-id163 . -5) (undo-tree-id165 . -5) (undo-tree-id167 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -20) (undo-tree-id173 . -20) (t 26006 61715 244888 862000)) ((2682 . 2703)) (26059 36010 367375 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3733) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (3732 . 3734) (t 26059 37218 305029 638000)) nil (26059 37277 874358 0) 0 nil])
([nil nil ((3766 . 3767) 2631) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path"))) . 3766) (undo-tree-id4824 . 1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1)) (26059 37214 312073 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . -2691) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (2682 . 2692)) ((#("Exceptionf" 0 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 9 10 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2682) (undo-tree-id268 . -9) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -9) (undo-tree-id272 . -9) (undo-tree-id273 . -9) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (undo-tree-id276 . -9) (undo-tree-id277 . -9) (undo-tree-id278 . -9) (undo-tree-id279 . -9) (undo-tree-id280 . -9) (undo-tree-id281 . -9) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (undo-tree-id284 . -9) (undo-tree-id285 . -9) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -7) (undo-tree-id302 . -7) (undo-tree-id303 . -7) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7) (undo-tree-id308 . -7) (undo-tree-id309 . -7) (undo-tree-id310 . -7) (undo-tree-id311 . -7) (undo-tree-id312 . -7) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7) (undo-tree-id316 . -7) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (2691 . 2692)) (26059 36009 775983 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3731) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (3731 . 3732) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3731) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3732) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) 3733 (t 26059 37277 880246 634000)) nil (26059 37283 720300 0) 0 nil])
([nil nil ((#("(println \"JMR read-file\")" 0 9 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 9 24 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 24 25 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2608) (undo-tree-id1144 . -25) (undo-tree-id1145 . -23) (undo-tree-id1146 . -24) (undo-tree-id1147 . 1) (undo-tree-id1149 . -10) (undo-tree-id1151 . -10) (undo-tree-id1153 . -10) (undo-tree-id1155 . -10) (undo-tree-id1157 . -10) (undo-tree-id1159 . -10) (undo-tree-id1161 . -10) (undo-tree-id1163 . -10) (undo-tree-id1165 . -10) (undo-tree-id1167 . -10) (undo-tree-id1169 . -10) (undo-tree-id1171 . -19) (undo-tree-id1173 . -19) (undo-tree-id1175 . -19) (undo-tree-id1177 . -19) (undo-tree-id1179 . -24) (undo-tree-id1181 . -24) (undo-tree-id1183 . -24) (undo-tree-id1185 . -24) (undo-tree-id1187 . -24) (undo-tree-id1189 . -24) (undo-tree-id1191 . -24) (undo-tree-id1193 . -24) (undo-tree-id1195 . -24) (undo-tree-id1197 . -24) (undo-tree-id1199 . -24) (undo-tree-id1201 . -24) (undo-tree-id1203 . -24) (undo-tree-id1205 . -24) (undo-tree-id1207 . -23) (undo-tree-id1209 . -23) (undo-tree-id1211 . -23) (undo-tree-id1213 . -23) (undo-tree-id1215 . -23) (undo-tree-id1217 . -23) (undo-tree-id1219 . -23) (undo-tree-id1221 . -23) (undo-tree-id1223 . -23) (undo-tree-id1225 . -23) (undo-tree-id1227 . -23) (undo-tree-id1229 . -23) (undo-tree-id1231 . -23) (undo-tree-id1233 . -23) (undo-tree-id1235 . -23) (undo-tree-id1237 . -23) (undo-tree-id1239 . -23) (undo-tree-id1241 . -23) (undo-tree-id1243 . -23) (undo-tree-id1245 . -23) (undo-tree-id1247 . -23) (undo-tree-id1249 . -23) (undo-tree-id1251 . -23) (undo-tree-id1253 . -23) (undo-tree-id1255 . -23) (undo-tree-id1257 . -23) (undo-tree-id1259 . -23) (undo-tree-id1261 . -23) (undo-tree-id1263 . -23) (undo-tree-id1265 . -23) (undo-tree-id1267 . -23) (undo-tree-id1269 . -23) (undo-tree-id1271 . -23) (undo-tree-id1273 . -23) (undo-tree-id1275 . -23) (undo-tree-id1277 . -23) (undo-tree-id1279 . -23) (undo-tree-id1281 . -23) (undo-tree-id1283 . -23) (undo-tree-id1285 . -23) (undo-tree-id1287 . -23) (undo-tree-id1289 . -23) (undo-tree-id1291 . -23) (undo-tree-id1293 . -23) (undo-tree-id1295 . -23) (undo-tree-id1297 . -23) (undo-tree-id1299 . -23) (undo-tree-id1301 . -23) (undo-tree-id1303 . -23) (undo-tree-id1305 . -23) (undo-tree-id1307 . -23) (undo-tree-id1309 . -23) (undo-tree-id1311 . -23) (undo-tree-id1313 . -23) (undo-tree-id1315 . -23) (undo-tree-id1317 . -23) (undo-tree-id1319 . -23) (undo-tree-id1321 . -23) (undo-tree-id1323 . -23) (undo-tree-id1325 . -23) (undo-tree-id1327 . -23) (undo-tree-id1329 . -23) (undo-tree-id1331 . -23) (undo-tree-id1333 . -23) (undo-tree-id1335 . -23) (undo-tree-id1337 . -23) (undo-tree-id1339 . -23) (undo-tree-id1341 . -23) (undo-tree-id1343 . -23) (undo-tree-id1345 . -23) (undo-tree-id1347 . -23) (undo-tree-id1349 . -23) (undo-tree-id1351 . -23) (undo-tree-id1353 . -23) (undo-tree-id1355 . -23) (undo-tree-id1357 . -23) (undo-tree-id1359 . -23) (undo-tree-id1361 . -23) (undo-tree-id1363 . -23) (undo-tree-id1365 . -23) (undo-tree-id1367 . -23) (undo-tree-id1369 . -23) (undo-tree-id1371 . -23) (undo-tree-id1373 . -23) (undo-tree-id1375 . -23) (undo-tree-id1377 . -23) (undo-tree-id1379 . -23) (undo-tree-id1381 . -23) (undo-tree-id1383 . -23) (undo-tree-id1385 . -22) (undo-tree-id1387 . -22) (undo-tree-id1389 . -22) (undo-tree-id1391 . -22) (undo-tree-id1393 . -22) (undo-tree-id1395 . -22) (undo-tree-id1397 . -22) (undo-tree-id1399 . -22) (undo-tree-id1401 . -22) (undo-tree-id1403 . -22) (undo-tree-id1405 . -22) (undo-tree-id1407 . -22) (undo-tree-id1409 . -22) (undo-tree-id1411 . -22) (undo-tree-id1413 . -22) (undo-tree-id1415 . -21) (undo-tree-id1417 . -21) (undo-tree-id1419 . -21) (undo-tree-id1421 . -21) (undo-tree-id1423 . -21) (undo-tree-id1425 . -21) (undo-tree-id1427 . -21) (undo-tree-id1429 . -20) (undo-tree-id1431 . -20) (undo-tree-id1433 . -20) (undo-tree-id1435 . -20) (undo-tree-id1437 . -19) (undo-tree-id1439 . -19) (undo-tree-id1441 . -19) (undo-tree-id1443 . -19) (undo-tree-id1445 . -18) (undo-tree-id1447 . -18) (undo-tree-id1449 . -18) (undo-tree-id1451 . -18) (undo-tree-id1453 . -17) (undo-tree-id1455 . -17) (undo-tree-id1457 . -17) (undo-tree-id1459 . -17) (undo-tree-id1461 . -16) (undo-tree-id1463 . -16) (undo-tree-id1465 . -16) (undo-tree-id1467 . -16) (undo-tree-id1469 . -15) (undo-tree-id1471 . -15) (undo-tree-id1473 . -15) (undo-tree-id1475 . -15) (undo-tree-id1477 . -14) (undo-tree-id1479 . -14) (undo-tree-id1481 . -14) (undo-tree-id1483 . -14) (undo-tree-id1485 . -13) (undo-tree-id1487 . -13) (undo-tree-id1489 . -13) (undo-tree-id1491 . -13) (undo-tree-id1493 . -12) (undo-tree-id1495 . -12) (undo-tree-id1497 . -12) (undo-tree-id1499 . -12) (undo-tree-id1501 . -11) (undo-tree-id1503 . -11) (undo-tree-id1505 . -11) (undo-tree-id1507 . -11) (undo-tree-id1509 . -10) (undo-tree-id1511 . -10) (undo-tree-id1513 . -10) (undo-tree-id1515 . -10) (undo-tree-id1517 . -9) (undo-tree-id1519 . -9) (undo-tree-id1521 . -9) (undo-tree-id1523 . -9) (undo-tree-id1525 . -8) (undo-tree-id1527 . -8) (undo-tree-id1529 . -8) (undo-tree-id1531 . -8) (undo-tree-id1533 . -7) (undo-tree-id1535 . -7) (undo-tree-id1537 . -7) (undo-tree-id1539 . -7) (undo-tree-id1541 . -6) (undo-tree-id1543 . -6) (undo-tree-id1545 . -6) (undo-tree-id1547 . -6) (undo-tree-id1549 . -5) (undo-tree-id1551 . -5) (undo-tree-id1553 . -5) (undo-tree-id1555 . -5) (undo-tree-id1557 . -4) (undo-tree-id1559 . -4) (undo-tree-id1561 . -4) (undo-tree-id1563 . -4) (undo-tree-id1565 . -3) (undo-tree-id1567 . -3) (undo-tree-id1569 . -3) (undo-tree-id1571 . -3) (undo-tree-id1573 . -3) (undo-tree-id1575 . -3) (undo-tree-id1577 . -3) (undo-tree-id1579 . -3) (undo-tree-id1581 . -2) (undo-tree-id1583 . -2) (undo-tree-id1585 . -2) (undo-tree-id1587 . -2) (undo-tree-id1589 . -2) (undo-tree-id1591 . -2) (undo-tree-id1593 . -2) (undo-tree-id1595 . -1) (undo-tree-id1597 . -1) (undo-tree-id1599 . -1) (undo-tree-id1601 . -1) (undo-tree-id1603 . -1) (undo-tree-id1605 . -1) (undo-tree-id1607 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . 25) (undo-tree-id1611 . -1) (undo-tree-id1612 . 1) (undo-tree-id1613 . -25) (undo-tree-id1615 . -24) (t 26059 36033 703834 62000)) ((2608 . 2633)) (26059 37214 277867 0) 0 nil])
([nil nil ((3719 . 3720) 2690) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 3719)) (26059 36008 902769 0) 0 nil])
([nil current ((3731 . 3732) 3730) nil (26059 37283 720103 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . -2608) (undo-tree-id626 . -1) (undo-tree-id628 . -1) (undo-tree-id630 . -1) (undo-tree-id632 . -1) (undo-tree-id634 . -1) (2608 . 2609) (#("        " 0 8 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . -2608) 2607 (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2607) (undo-tree-id635 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2607) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id642 . -1) (undo-tree-id644 . -1) (undo-tree-id646 . -1) (undo-tree-id648 . -1) (undo-tree-id650 . -1) (undo-tree-id652 . -1) (undo-tree-id654 . -1) (undo-tree-id656 . -1) (undo-tree-id658 . -1) (undo-tree-id660 . -1) (undo-tree-id662 . -1) (undo-tree-id664 . -1) (undo-tree-id666 . -1) (undo-tree-id668 . -1) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (undo-tree-id772 . -1) (undo-tree-id774 . -1) (undo-tree-id776 . -1) (undo-tree-id778 . -1) (undo-tree-id780 . -1) (undo-tree-id782 . -1) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (undo-tree-id814 . -1) (undo-tree-id816 . -1) (undo-tree-id818 . -1) (undo-tree-id820 . -1) (undo-tree-id822 . -1) (undo-tree-id824 . -1) (undo-tree-id826 . -1) (undo-tree-id828 . -1) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -1) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (undo-tree-id910 . -1) (undo-tree-id912 . -1) (undo-tree-id914 . -1) (undo-tree-id916 . -1) (undo-tree-id918 . -1) (undo-tree-id920 . -1) (undo-tree-id922 . -1) (undo-tree-id924 . -1) (undo-tree-id926 . -1) (undo-tree-id928 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id934 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id940 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id946 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (undo-tree-id990 . -1) (undo-tree-id992 . -1) (undo-tree-id994 . -1) (undo-tree-id996 . -1) (undo-tree-id998 . -1) (undo-tree-id1000 . -1) (undo-tree-id1002 . -1) (undo-tree-id1004 . -1) (undo-tree-id1006 . -1) (undo-tree-id1008 . -1) (undo-tree-id1010 . -1) (undo-tree-id1012 . -1) (undo-tree-id1014 . -1) (undo-tree-id1016 . -1) (undo-tree-id1018 . -1) (undo-tree-id1020 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) (undo-tree-id1026 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (undo-tree-id1050 . -1) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (undo-tree-id1094 . -1) (undo-tree-id1096 . -1) (undo-tree-id1098 . -1) (undo-tree-id1100 . -1) (undo-tree-id1102 . -1) (undo-tree-id1104 . -1) (undo-tree-id1106 . -1) (undo-tree-id1108 . -1) (undo-tree-id1110 . -1) (undo-tree-id1112 . -1) (undo-tree-id1114 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (undo-tree-id1128 . -1) (undo-tree-id1130 . -1) (undo-tree-id1132 . -1) (undo-tree-id1134 . -1) (undo-tree-id1136 . -1) (undo-tree-id1138 . -1) (undo-tree-id1140 . -1) (undo-tree-id1142 . -1)) ((2607 . 2608) (2607 . 2608) (2608 . 2616) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2608) (2608 . 2609)) (26059 37214 243808 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2660) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (undo-tree-id178 . -1) (undo-tree-id180 . -1) (undo-tree-id182 . -1) (2658 . 2661) (2655 . 2658) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2655) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id189 . -1) (undo-tree-id191 . -1) (2637 . 2656) (2636 . 2638) (2626 . 2636) (t 26059 35949 867041 286000)) ((#("
         " 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 1 10 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2626) (undo-tree-id259 . -10) (undo-tree-id260 . -10) (undo-tree-id261 . -10) (#("()" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2636) (undo-tree-id262 . -1) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (#("println \"JMR read-f" 0 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin")) 8 18 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 18 19 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2637) (undo-tree-id265 . -18) (2655 . 2656) (#("fil" 0 3 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2655) (undo-tree-id266 . -3) (#("e\"f" 0 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face) 2 3 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2658) (undo-tree-id267 . -2) (2660 . 2661) (t 26059 35995 118648 567000)) (26059 36008 537225 0) 0 nil])
nil
([nil nil ((2503 . 2510) (#("       " 0 7 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . 2502) (undo-tree-id593 . -7) (undo-tree-id595 . -7) (undo-tree-id597 . -7) (undo-tree-id599 . -7) (undo-tree-id601 . -7) (undo-tree-id603 . -7) (undo-tree-id605 . -7) (undo-tree-id607 . -7) (undo-tree-id609 . -7) (undo-tree-id611 . -7) (undo-tree-id613 . -7) (undo-tree-id615 . -7) (undo-tree-id617 . -7) (undo-tree-id619 . -7) (undo-tree-id621 . -7) (undo-tree-id623 . -7) (undo-tree-id625 . -7) (2509 . 2510)) ((#("
" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . 2509) (2502 . 2509) (#("       " 0 7 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . 2503)) (26059 37214 208924 0) 0 nil])
([nil nil ((#("Exception" 0 9 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin"))) . 2717) (undo-tree-id201 . -9) (undo-tree-id202 . -8) (undo-tree-id203 . -9) (undo-tree-id204 . -9) (undo-tree-id205 . -9) (undo-tree-id206 . -9) (undo-tree-id207 . -9) (undo-tree-id208 . -9) (undo-tree-id209 . -9) (undo-tree-id210 . -9) (undo-tree-id211 . -9) (undo-tree-id212 . -9) (undo-tree-id213 . -9) (undo-tree-id214 . -9) (undo-tree-id215 . -9) (undo-tree-id216 . -9) (undo-tree-id217 . -9) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -8) (undo-tree-id230 . -8) (undo-tree-id231 . -8) (undo-tree-id232 . -8) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -7) (undo-tree-id241 . -7) (undo-tree-id242 . -7) (undo-tree-id243 . -7) (undo-tree-id244 . -7) (undo-tree-id245 . -7) (undo-tree-id246 . -7) (undo-tree-id247 . -7) (undo-tree-id248 . -7) (undo-tree-id249 . -9) (undo-tree-id250 . -8) (t 26059 35995 118648 567000)) ((2717 . 2726)) (26059 36008 98850 0) 0 nil])
([nil nil ((2502 . 2509)) ((#("       " 0 7 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path"))) . 2502) (undo-tree-id4734 . -6) (undo-tree-id4735 . -7) (undo-tree-id4736 . -7) (undo-tree-id4737 . -7) (undo-tree-id4738 . -7) (undo-tree-id4739 . -7) (undo-tree-id4740 . -7) (undo-tree-id4741 . -7) (undo-tree-id4742 . -7) (undo-tree-id4743 . -7) (undo-tree-id4744 . -7) (undo-tree-id4745 . -7) (undo-tree-id4746 . -7) (undo-tree-id4747 . -7) (undo-tree-id4748 . -7) (undo-tree-id4749 . -7) (undo-tree-id4750 . -7) (undo-tree-id4751 . -7) (undo-tree-id4752 . -7) (undo-tree-id4753 . -7) (undo-tree-id4754 . -7) (undo-tree-id4755 . -7) (undo-tree-id4756 . -7) (undo-tree-id4757 . -7) (undo-tree-id4758 . -7) (undo-tree-id4759 . -7) (undo-tree-id4760 . -7) (undo-tree-id4761 . -7) (undo-tree-id4762 . -7) (undo-tree-id4763 . -7) (undo-tree-id4764 . -7) (undo-tree-id4765 . -7) (undo-tree-id4766 . -7) (undo-tree-id4767 . -7) (undo-tree-id4768 . -7) (undo-tree-id4769 . -7) (undo-tree-id4770 . -7) (undo-tree-id4771 . -7) (undo-tree-id4772 . -7) (undo-tree-id4773 . -7) (undo-tree-id4774 . -7) (undo-tree-id4775 . -7) (undo-tree-id4776 . -7) (undo-tree-id4777 . -7) (undo-tree-id4778 . -7) (undo-tree-id4779 . -7) (undo-tree-id4780 . -7) (undo-tree-id4781 . -7) (undo-tree-id4782 . -7) (undo-tree-id4783 . -7) (undo-tree-id4784 . -7) (undo-tree-id4785 . -7) (undo-tree-id4786 . -7) (undo-tree-id4787 . -7) (undo-tree-id4788 . -7) (undo-tree-id4789 . -7) (undo-tree-id4790 . -7) (undo-tree-id4791 . -7) (undo-tree-id4792 . -7) (undo-tree-id4793 . -7) (undo-tree-id4794 . -7) (undo-tree-id4795 . -7) (undo-tree-id4796 . -7) (undo-tree-id4797 . -7) (undo-tree-id4798 . -7) (undo-tree-id4799 . -7) (undo-tree-id4800 . -7) (undo-tree-id4801 . -7) (undo-tree-id4802 . -7) (undo-tree-id4803 . -7) (undo-tree-id4804 . -7) (undo-tree-id4805 . -7) (undo-tree-id4806 . -7) (undo-tree-id4807 . -7) (undo-tree-id4808 . -7) (undo-tree-id4809 . -7) (undo-tree-id4810 . -7) (undo-tree-id4811 . -7) (undo-tree-id4812 . -7) (undo-tree-id4813 . -7) (undo-tree-id4814 . -7) (undo-tree-id4815 . -6) (undo-tree-id4816 . -6) (undo-tree-id4817 . -6) (undo-tree-id4818 . -6) (undo-tree-id4819 . -6) (undo-tree-id4820 . -6) (undo-tree-id4821 . -6) (undo-tree-id4822 . -6) (undo-tree-id4823 . -6)) (26059 37214 175951 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . -2738) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (2717 . 2739)) ((#("FileNotFoundExceptionf" 0 21 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path")) 21 22 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . 2717) (undo-tree-id251 . -22) (undo-tree-id252 . -22) (undo-tree-id253 . -22) (undo-tree-id254 . -22) (undo-tree-id255 . -22) (undo-tree-id256 . -22) (undo-tree-id257 . -22) (undo-tree-id258 . -22) (2738 . 2739)) (26059 36008 98759 0) 0 nil])
([nil nil ((2528 . 2530) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . -2528) (undo-tree-id584 . -1) (undo-tree-id586 . -1) (undo-tree-id588 . -1) (undo-tree-id590 . -1) (undo-tree-id592 . -1) (2509 . 2529)) ((#("(println \"JMR read-f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path")) 1 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") face font-lock-function-name-face) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path")) 9 19 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") face font-lock-string-face) 19 20 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . 2509) (undo-tree-id4572 . -20) (undo-tree-id4573 . -19) (undo-tree-id4574 . -19) (undo-tree-id4575 . -19) (undo-tree-id4576 . -19) (undo-tree-id4577 . -19) (undo-tree-id4578 . -19) (undo-tree-id4579 . -19) (undo-tree-id4580 . -19) (undo-tree-id4581 . -19) (undo-tree-id4582 . -19) (undo-tree-id4583 . -19) (undo-tree-id4584 . -19) (undo-tree-id4585 . -19) (undo-tree-id4586 . -19) (undo-tree-id4587 . -19) (undo-tree-id4588 . -19) (undo-tree-id4589 . -19) (undo-tree-id4590 . -19) (undo-tree-id4591 . -19) (undo-tree-id4592 . -19) (undo-tree-id4593 . -19) (undo-tree-id4594 . -19) (undo-tree-id4595 . -19) (undo-tree-id4596 . -19) (undo-tree-id4597 . -19) (undo-tree-id4598 . -19) (undo-tree-id4599 . -19) (undo-tree-id4600 . -19) (undo-tree-id4601 . -19) (undo-tree-id4602 . -19) (undo-tree-id4603 . -19) (undo-tree-id4604 . -19) (undo-tree-id4605 . -19) (undo-tree-id4606 . -19) (undo-tree-id4607 . -19) (undo-tree-id4608 . -19) (undo-tree-id4609 . -19) (undo-tree-id4610 . -19) (undo-tree-id4611 . -19) (undo-tree-id4612 . -19) (undo-tree-id4613 . -19) (undo-tree-id4614 . -19) (undo-tree-id4615 . -19) (undo-tree-id4616 . -19) (undo-tree-id4617 . -19) (undo-tree-id4618 . -19) (undo-tree-id4619 . -19) (undo-tree-id4620 . -19) (undo-tree-id4621 . -19) (undo-tree-id4622 . -19) (undo-tree-id4623 . -19) (undo-tree-id4624 . -19) (undo-tree-id4625 . -19) (undo-tree-id4626 . -19) (undo-tree-id4627 . -19) (undo-tree-id4628 . -19) (undo-tree-id4629 . -19) (undo-tree-id4630 . -19) (undo-tree-id4631 . -19) (undo-tree-id4632 . -19) (undo-tree-id4633 . -19) (undo-tree-id4634 . -19) (undo-tree-id4635 . -19) (undo-tree-id4636 . -19) (undo-tree-id4637 . -19) (undo-tree-id4638 . -19) (undo-tree-id4639 . -19) (undo-tree-id4640 . -19) (undo-tree-id4641 . -19) (undo-tree-id4642 . -19) (undo-tree-id4643 . -19) (undo-tree-id4644 . -19) (undo-tree-id4645 . -19) (undo-tree-id4646 . -19) (undo-tree-id4647 . -19) (undo-tree-id4648 . -19) (undo-tree-id4649 . -19) (undo-tree-id4650 . -19) (undo-tree-id4651 . -19) (undo-tree-id4652 . -19) (2528 . 2529) (#("fi" 0 2 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . 2528) (undo-tree-id4653 . -1) (undo-tree-id4654 . -2) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (undo-tree-id4657 . -2) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -2) (undo-tree-id4661 . -2) (undo-tree-id4662 . -2) (undo-tree-id4663 . -2) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (undo-tree-id4666 . -2) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) (undo-tree-id4680 . -2) (undo-tree-id4681 . -2) (undo-tree-id4682 . -2) (undo-tree-id4683 . -2) (undo-tree-id4684 . -2) (undo-tree-id4685 . -2) (undo-tree-id4686 . -2) (undo-tree-id4687 . -2) (undo-tree-id4688 . -2) (undo-tree-id4689 . -2) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . -2) (undo-tree-id4697 . -2) (undo-tree-id4698 . -2) (undo-tree-id4699 . -2) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (undo-tree-id4702 . -2) (undo-tree-id4703 . -2) (undo-tree-id4704 . -2) (undo-tree-id4705 . -2) (undo-tree-id4706 . -2) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) (undo-tree-id4709 . -2) (undo-tree-id4710 . -2) (undo-tree-id4711 . -2) (undo-tree-id4712 . -2) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -2) (undo-tree-id4721 . -2) (undo-tree-id4722 . -2) (undo-tree-id4723 . -2) (undo-tree-id4724 . -2) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1)) (26059 37214 144479 0) 0 nil])
nil
([nil nil ((2530 . 2533)) ((#("le)" 0 2 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face) 2 3 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . 2530) (undo-tree-id4500 . -2) (undo-tree-id4501 . -2) (undo-tree-id4502 . -2) (undo-tree-id4503 . -2) (undo-tree-id4504 . -2) (undo-tree-id4505 . -2) (undo-tree-id4506 . -2) (undo-tree-id4507 . -2) (undo-tree-id4508 . -2) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (undo-tree-id4520 . -2) (undo-tree-id4521 . -2) (undo-tree-id4522 . -2) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) (undo-tree-id4525 . -2) (undo-tree-id4526 . -2) (undo-tree-id4527 . -2) (undo-tree-id4528 . -2) (undo-tree-id4529 . -2) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -2) (undo-tree-id4538 . -2) (undo-tree-id4539 . -2) (undo-tree-id4540 . -2) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (undo-tree-id4543 . -2) (undo-tree-id4544 . -2) (undo-tree-id4545 . -2) (undo-tree-id4546 . -2) (undo-tree-id4547 . -2) (undo-tree-id4548 . -2) (undo-tree-id4549 . -2) (undo-tree-id4550 . -2) (undo-tree-id4551 . -2) (undo-tree-id4552 . -2) (undo-tree-id4553 . -2) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -3) (undo-tree-id4563 . -2) (undo-tree-id4564 . -2) (undo-tree-id4565 . -2) (undo-tree-id4566 . -2) (undo-tree-id4567 . -2) (undo-tree-id4568 . -2) (undo-tree-id4569 . -2) (undo-tree-id4570 . -2) (undo-tree-id4571 . -2)) (26059 37214 109367 0) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face)) . -2532) (undo-tree-id551 . -1) (undo-tree-id553 . -1) (undo-tree-id555 . -1) (undo-tree-id557 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . 1) (undo-tree-id561 . -1) (undo-tree-id563 . -1) (undo-tree-id565 . -1) (undo-tree-id567 . -1) (undo-tree-id569 . -1) (undo-tree-id571 . -1) (undo-tree-id573 . -1) (undo-tree-id575 . -1) (undo-tree-id577 . -1) (undo-tree-id579 . -1) (undo-tree-id581 . -1) (undo-tree-id583 . -1) 2533) ((2532 . 2533)) (26059 37214 76728 0) 0 nil])
([nil nil ((2532 . 2536)) ((#("\")Fd" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face font-lock-multiline t) 1 2 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 2 3 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 3 4 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2532) (undo-tree-id4445 . -3) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -4) (undo-tree-id4491 . -3) (undo-tree-id4492 . -3) (undo-tree-id4493 . -3) (undo-tree-id4494 . -3) (undo-tree-id4495 . -3) (undo-tree-id4496 . -3) (undo-tree-id4497 . -3) (undo-tree-id4498 . -3) (undo-tree-id4499 . -3)) (26059 37214 41511 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . -2534) (undo-tree-id1616 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (undo-tree-id1622 . -1) (undo-tree-id1624 . -1) (2534 . 2535) (#("F" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path"))) . -2534) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1628 . -1) (undo-tree-id1630 . -1) (undo-tree-id1632 . -1) (undo-tree-id1634 . -1) (undo-tree-id1636 . -1) (undo-tree-id1638 . -1) (undo-tree-id1640 . -1) (undo-tree-id1642 . -1) (undo-tree-id1644 . -1) (undo-tree-id1646 . -1) (undo-tree-id1648 . -1) (undo-tree-id1650 . -1) (undo-tree-id1652 . -1) (undo-tree-id1654 . -1) (undo-tree-id1656 . -1) (undo-tree-id1658 . -1) (undo-tree-id1660 . -1) (undo-tree-id1662 . -1) (undo-tree-id1664 . -1) (undo-tree-id1666 . -1) (undo-tree-id1668 . -1) (undo-tree-id1670 . -1) (undo-tree-id1672 . -1) (undo-tree-id1674 . -1) (undo-tree-id1676 . -1) (undo-tree-id1678 . -1) (undo-tree-id1680 . -1) (undo-tree-id1682 . -1) (undo-tree-id1684 . -1) (undo-tree-id1686 . -1) (undo-tree-id1688 . -1) (undo-tree-id1690 . -1) (undo-tree-id1692 . -1) 2535 (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path"))) . -2535) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1697 . -1) (undo-tree-id1699 . -1) (undo-tree-id1701 . -1) (undo-tree-id1703 . -1) (undo-tree-id1705 . -1) (undo-tree-id1707 . -1) (undo-tree-id1709 . -1) (undo-tree-id1711 . -1) (undo-tree-id1713 . -1) (undo-tree-id1715 . -1) (undo-tree-id1717 . -1) (undo-tree-id1719 . -1) (undo-tree-id1721 . -1) (undo-tree-id1723 . -1) (undo-tree-id1725 . -1) (undo-tree-id1727 . -1) (undo-tree-id1729 . -1) (undo-tree-id1731 . -1) (undo-tree-id1733 . -1) (undo-tree-id1735 . -1) (undo-tree-id1737 . -1) (undo-tree-id1739 . -1) (undo-tree-id1741 . -1) (undo-tree-id1743 . -1) (undo-tree-id1745 . -1) (undo-tree-id1747 . -1) 2536 (t 26059 36060 164461 863000)) ((2534 . 2536) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path"))) . 2534) (2534 . 2535)) (26059 37214 8838 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . -2382) (undo-tree-id1831 . -1) (undo-tree-id1833 . -1) (undo-tree-id1835 . -1) (undo-tree-id1837 . -1) (undo-tree-id1839 . -1) (2382 . 2383) 2383 (2381 . 2383) (t 26059 36061 267071 248000)) ((#("

" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . 2381) (undo-tree-id4295 . -1) (undo-tree-id4296 . 1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . 2382) (undo-tree-id4444 . -1) (2382 . 2383)) (26059 37213 974473 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2403 . 2404) (nil fontified nil 2382 . 2404) (2382 . 2404)) ((#("(io/input-stream path)" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path")) 1 3 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-type-face) 3 17 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path")) 17 21 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path")) 21 22 (rear-nonsticky nil help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . 2382) (undo-tree-id4195 . -1) (undo-tree-id4196 . -20) (undo-tree-id4197 . -1) (undo-tree-id4198 . -22) (undo-tree-id4199 . -19) (undo-tree-id4200 . -17) (undo-tree-id4201 . -17) (undo-tree-id4202 . -22) (undo-tree-id4203 . -7) (undo-tree-id4204 . -1) (undo-tree-id4205 . -17) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -17) (undo-tree-id4236 . -17) (undo-tree-id4237 . -17) (undo-tree-id4238 . -17) (undo-tree-id4239 . -17) (undo-tree-id4240 . -17) (undo-tree-id4241 . -17) (undo-tree-id4242 . -17) (undo-tree-id4243 . -17) (undo-tree-id4244 . -17) (undo-tree-id4245 . -17) (undo-tree-id4246 . -17) (undo-tree-id4247 . -17) (undo-tree-id4248 . -17) (undo-tree-id4249 . -17) (undo-tree-id4250 . -17) (undo-tree-id4251 . -17) (undo-tree-id4252 . -17) (undo-tree-id4253 . -17) (undo-tree-id4254 . -17) (undo-tree-id4255 . -17) (undo-tree-id4256 . -17) (undo-tree-id4257 . -17) (undo-tree-id4258 . -17) (undo-tree-id4259 . -17) (undo-tree-id4260 . -17) (undo-tree-id4261 . -17) (undo-tree-id4262 . -17) (undo-tree-id4263 . -17) (undo-tree-id4264 . -17) (undo-tree-id4265 . -17) (undo-tree-id4266 . -17) (undo-tree-id4267 . -17) (undo-tree-id4268 . -17) (undo-tree-id4269 . -17) (undo-tree-id4270 . -17) (undo-tree-id4271 . -17) (undo-tree-id4272 . -17) (undo-tree-id4273 . -17) (undo-tree-id4274 . -17) (undo-tree-id4275 . -17) (undo-tree-id4276 . -17) (undo-tree-id4277 . -17) (undo-tree-id4278 . -17) (undo-tree-id4279 . -17) (undo-tree-id4280 . -17) (undo-tree-id4281 . -17) (undo-tree-id4282 . -17) (undo-tree-id4283 . -17) (undo-tree-id4284 . -17) (undo-tree-id4285 . -17) (undo-tree-id4286 . -17) (undo-tree-id4287 . -17) (undo-tree-id4288 . -17) (undo-tree-id4289 . -17) (undo-tree-id4290 . -17) (undo-tree-id4291 . -17) (undo-tree-id4292 . -17) (undo-tree-id4293 . -17) (undo-tree-id4294 . -17) (nil rear-nonsticky t 2403 . 2404)) (26059 37213 723449 0) 0 nil])
([nil nil ((#("path" 0 4 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . 2399) (undo-tree-id1766 . -4) (undo-tree-id1767 . -3) (undo-tree-id1768 . -4) (undo-tree-id1770 . -4) (undo-tree-id1772 . -4) (undo-tree-id1774 . -4) (undo-tree-id1776 . -4) (undo-tree-id1778 . -4) (undo-tree-id1780 . -4) (undo-tree-id1782 . -4) (undo-tree-id1784 . -4) (undo-tree-id1786 . -4) (undo-tree-id1788 . -4) (undo-tree-id1790 . -4) (undo-tree-id1792 . -4) (undo-tree-id1794 . -4) (undo-tree-id1796 . -4) (undo-tree-id1798 . -3) (undo-tree-id1800 . -3) (undo-tree-id1802 . -3) (undo-tree-id1804 . -3) (undo-tree-id1806 . -3) (undo-tree-id1808 . -3) (undo-tree-id1810 . -3) (undo-tree-id1812 . -3) (undo-tree-id1814 . -2) (undo-tree-id1816 . -2) (undo-tree-id1818 . -2) (undo-tree-id1820 . -2) (undo-tree-id1822 . -2) (undo-tree-id1824 . -2) (undo-tree-id1826 . -2) (undo-tree-id1828 . -2) (undo-tree-id1830 . -3)) ((2399 . 2403)) (26059 37213 546951 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . -2401) (undo-tree-id1757 . -1) (undo-tree-id1759 . -1) (undo-tree-id1761 . -1) (undo-tree-id1763 . -1) (undo-tree-id1765 . -1) (2399 . 2402)) ((#("\"\"f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-string-face) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-string-face) 2 3 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2399) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (2401 . 2402)) (26059 37213 347548 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . -2560) (undo-tree-id1748 . -1) (undo-tree-id1750 . -1) (undo-tree-id1752 . -1) (undo-tree-id1754 . -1) (undo-tree-id1756 . -1) (2555 . 2561)) ((#(" pathf" 0 5 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 5 6 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2555) (undo-tree-id4141 . -2) (undo-tree-id4142 . -2) (undo-tree-id4143 . -2) (undo-tree-id4144 . -2) (undo-tree-id4145 . -2) (undo-tree-id4146 . -2) (undo-tree-id4147 . -2) (undo-tree-id4148 . -2) (undo-tree-id4149 . -2) (undo-tree-id4150 . -2) (undo-tree-id4151 . -2) (undo-tree-id4152 . -2) (undo-tree-id4153 . -2) (undo-tree-id4154 . -2) (undo-tree-id4155 . -2) (undo-tree-id4156 . -2) (undo-tree-id4157 . -2) (undo-tree-id4158 . -2) (undo-tree-id4159 . -2) (undo-tree-id4160 . -2) (undo-tree-id4161 . -2) (undo-tree-id4162 . -2) (2560 . 2561)) (26059 37213 156911 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2451 . 2452) (nil fontified nil 2400 . 2452) (2400 . 2452) (t 26059 36118 632927 655000)) ((#("/Users/jace/Code/data///fluree/nonledger12/main/head" 0 22 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-string-face) 22 23 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 23 24 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 24 51 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-string-face) 51 52 (rear-nonsticky nil help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2400) (undo-tree-id4123 . -52) (undo-tree-id4124 . -22) (undo-tree-id4125 . -22) (undo-tree-id4126 . -22) (undo-tree-id4127 . -22) (undo-tree-id4128 . -22) (undo-tree-id4129 . -22) (undo-tree-id4130 . -22) (undo-tree-id4131 . -22) (undo-tree-id4132 . -22) (undo-tree-id4133 . -22) (undo-tree-id4134 . -22) (undo-tree-id4135 . -22) (undo-tree-id4136 . -22) (undo-tree-id4137 . -22) (undo-tree-id4138 . -22) (undo-tree-id4139 . -22) (undo-tree-id4140 . -22) (nil rear-nonsticky t 2451 . 2452)) (26059 37212 971402 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . -2422) (undo-tree-id2129 . -1) (2422 . 2423) (#("/" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2422) (#("/" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2422)) ((2422 . 2423) (2422 . 2423) (#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2422) (2422 . 2423)) (26059 37212 804655 0) 0 nil])
([nil nil ((#("io/input-stream \"/Users/jace/Code/data/fluree/nonledger12/main/head\"" 0 2 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path") face font-lock-type-face) 2 16 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path")) 16 17 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path") face font-lock-string-face) 17 66 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path") face font-lock-string-face) 66 67 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path") face font-lock-string-face) 67 68 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path") face font-lock-string-face)) . 2383) (undo-tree-id2992 . -68) (undo-tree-id2993 . -67) (undo-tree-id2994 . 29) (undo-tree-id2995 . -16) (undo-tree-id2996 . -16) (undo-tree-id2998 . -17) (undo-tree-id3000 . -6) (undo-tree-id3002 . -6) (undo-tree-id3004 . -6) (undo-tree-id3006 . -6) (undo-tree-id3008 . -6) (undo-tree-id3010 . -6) (undo-tree-id3012 . -6) (undo-tree-id3014 . -6) (undo-tree-id3016 . -6) (undo-tree-id3018 . -6) (undo-tree-id3020 . -6) (undo-tree-id3022 . -6) (undo-tree-id3024 . -6) (undo-tree-id3026 . -6) (undo-tree-id3028 . -6) (undo-tree-id3030 . -67) (undo-tree-id3032 . -3) (undo-tree-id3034 . -3) (undo-tree-id3036 . -3) (undo-tree-id3038 . -3) (undo-tree-id3040 . -3) (undo-tree-id3042 . -3) (undo-tree-id3044 . -3) (undo-tree-id3046 . -3) (undo-tree-id3048 . -3) (undo-tree-id3050 . -3) (undo-tree-id3052 . -3) (undo-tree-id3054 . -3) (undo-tree-id3056 . -3) (undo-tree-id3058 . -3) (undo-tree-id3060 . -3) (undo-tree-id3062 . -3) (undo-tree-id3064 . -3) (undo-tree-id3066 . -3)) ((2383 . 2451)) (26059 37212 611363 0) 0 nil] [nil nil ((#("(io/input-stream \"/Users/jace/Code/data/fluree/nonledger12/main/head\")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path")) 1 3 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-type-face) 3 17 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path")) 17 18 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 18 67 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 67 68 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 68 69 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path") face font-lock-string-face) 69 70 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . 2382) (undo-tree-id2112 . -70) (undo-tree-id2113 . -69) (undo-tree-id2114 . 30) (undo-tree-id2115 . -18) (undo-tree-id2116 . -67) (undo-tree-id2117 . -17) (undo-tree-id2118 . -17) (undo-tree-id2119 . -18) (undo-tree-id2120 . -70) (undo-tree-id2121 . -39) (undo-tree-id2122 . 70) (undo-tree-id2123 . -1) (undo-tree-id2124 . 1) (undo-tree-id2125 . -70) (undo-tree-id2126 . -18) (undo-tree-id2127 . -70) (undo-tree-id2128 . -69)) ((2382 . 2452)) (26059 36237 661816 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . -2405) (undo-tree-id2942 . -1) (undo-tree-id2944 . -1) (undo-tree-id2946 . -1) (undo-tree-id2948 . -1) (undo-tree-id2950 . -1) (2392 . 2406) (#("A" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path"))) . -2392) (undo-tree-id2951 . -1) (undo-tree-id2953 . -1) (undo-tree-id2955 . -1) (undo-tree-id2957 . -1) (undo-tree-id2959 . -1) (undo-tree-id2961 . -1) (undo-tree-id2963 . -1) (undo-tree-id2965 . -1) (undo-tree-id2967 . -1) 2393 (2384 . 2393) (#("Y" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path"))) . -2384) (undo-tree-id2968 . -1) (undo-tree-id2970 . -1) (undo-tree-id2972 . -1) (undo-tree-id2974 . -1) (undo-tree-id2976 . -1) (undo-tree-id2978 . -1) (undo-tree-id2980 . -1) (undo-tree-id2982 . -1) (undo-tree-id2984 . -1) (undo-tree-id2986 . -1) (undo-tree-id2988 . -1) (undo-tree-id2990 . -1) 2385 (2383 . 2385)) ((#("BY" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . 2383) (2384 . 2385) (#("yteArrayA" 0 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path")) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . 2384) (2392 . 2393) (#("OutputStream.f" 0 13 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path")) 13 14 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path"))) . 2392) (2405 . 2406)) (26059 37212 404751 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . -2380) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (2380 . 2381) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . -2380) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . -2381) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) 2382) ((2380 . 2382) (#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . 2380) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (2380 . 2381)) (26059 36237 328043 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . -2697) (undo-tree-id2649 . -1) (undo-tree-id2651 . -1) (undo-tree-id2653 . -1) (undo-tree-id2655 . -1) (undo-tree-id2657 . -1) (2693 . 2698) (2691 . 2693) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . -2691) (undo-tree-id2658 . -1) (undo-tree-id2660 . -1) (undo-tree-id2662 . -1) (undo-tree-id2664 . -1) (undo-tree-id2666 . -1) (2672 . 2692) (2663 . 2672) (2664 . 2673) (#("         " 0 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2663) (undo-tree-id2668 . -8) (undo-tree-id2670 . -9) (undo-tree-id2672 . -1) (undo-tree-id2674 . -1) (undo-tree-id2676 . -1) (undo-tree-id2678 . -1) (undo-tree-id2680 . -1) (undo-tree-id2682 . -1) (undo-tree-id2684 . -1) (undo-tree-id2686 . -2) (undo-tree-id2688 . -2) (undo-tree-id2690 . -2) (undo-tree-id2692 . -2) (undo-tree-id2694 . -3) (undo-tree-id2696 . -3) (undo-tree-id2698 . -3) (undo-tree-id2700 . -3) (undo-tree-id2702 . -4) (undo-tree-id2704 . -4) (undo-tree-id2706 . -4) (undo-tree-id2708 . -4) (undo-tree-id2710 . -5) (undo-tree-id2712 . -5) (undo-tree-id2714 . -5) (undo-tree-id2716 . -5) (undo-tree-id2718 . -6) (undo-tree-id2720 . -6) (undo-tree-id2722 . -6) (undo-tree-id2724 . -6) (undo-tree-id2726 . -7) (undo-tree-id2728 . -7) (undo-tree-id2730 . -7) (undo-tree-id2732 . -7) (undo-tree-id2734 . -8) (undo-tree-id2736 . -8) (undo-tree-id2738 . -8) (undo-tree-id2740 . -8) (undo-tree-id2742 . -9) (undo-tree-id2744 . -9) (undo-tree-id2746 . -9) (undo-tree-id2748 . -9) (undo-tree-id2750 . -9) (undo-tree-id2752 . -9) (undo-tree-id2754 . -9) (undo-tree-id2756 . -9) (undo-tree-id2758 . -9) (undo-tree-id2760 . -9) (undo-tree-id2762 . -9) (undo-tree-id2764 . -9) (undo-tree-id2766 . -9) (undo-tree-id2768 . -9) (undo-tree-id2770 . -9) (undo-tree-id2772 . -9) (undo-tree-id2774 . -9) (undo-tree-id2776 . -9) (undo-tree-id2778 . -9) (undo-tree-id2780 . -9) (undo-tree-id2782 . -9) (undo-tree-id2784 . -9) (undo-tree-id2786 . -9) (undo-tree-id2788 . -9) (undo-tree-id2790 . -9) (undo-tree-id2792 . -9) (undo-tree-id2794 . -9) (undo-tree-id2796 . -9) (undo-tree-id2798 . -9) (undo-tree-id2800 . -9) (undo-tree-id2802 . -9) (undo-tree-id2804 . -9) (undo-tree-id2806 . -9) (undo-tree-id2808 . -9) (undo-tree-id2810 . -9) (undo-tree-id2812 . -9) (undo-tree-id2814 . -9) (undo-tree-id2816 . -9) (undo-tree-id2818 . -9) (undo-tree-id2820 . -9) (undo-tree-id2822 . -9) (undo-tree-id2824 . -9) (undo-tree-id2826 . -9) (undo-tree-id2828 . -9) (undo-tree-id2830 . -9) (undo-tree-id2832 . -9) (undo-tree-id2834 . -9) (undo-tree-id2836 . -9) (undo-tree-id2838 . -9) (undo-tree-id2840 . -9) (undo-tree-id2842 . -9) (undo-tree-id2844 . -9) (undo-tree-id2846 . -9) (undo-tree-id2848 . -9) (undo-tree-id2850 . -9) (undo-tree-id2852 . -9) (undo-tree-id2854 . -9) (undo-tree-id2856 . -9) (undo-tree-id2858 . -9) (undo-tree-id2860 . -9) (undo-tree-id2862 . -9) (undo-tree-id2864 . -9) (undo-tree-id2866 . -9) (undo-tree-id2868 . -9) (undo-tree-id2870 . -9) (undo-tree-id2872 . -9) (undo-tree-id2874 . -9) (undo-tree-id2876 . -9) (undo-tree-id2878 . -9) (undo-tree-id2880 . -9) (undo-tree-id2882 . -9) (undo-tree-id2884 . -9) (undo-tree-id2886 . -9) (undo-tree-id2888 . -9) (undo-tree-id2890 . -9) (undo-tree-id2892 . -9) (undo-tree-id2894 . -9) (undo-tree-id2896 . -9) (undo-tree-id2898 . -9) (undo-tree-id2900 . -9) (undo-tree-id2902 . -9) (undo-tree-id2904 . -9) (undo-tree-id2906 . -9) (undo-tree-id2908 . -9) (undo-tree-id2910 . -9) (undo-tree-id2912 . -9) (undo-tree-id2914 . -9) (undo-tree-id2916 . -9) (undo-tree-id2918 . -9) (undo-tree-id2920 . -9) (undo-tree-id2922 . -9) (undo-tree-id2924 . -9) (undo-tree-id2926 . -9) (undo-tree-id2928 . -9) (undo-tree-id2930 . -9) (undo-tree-id2932 . -9) (undo-tree-id2934 . -9) (undo-tree-id2936 . -9) (undo-tree-id2938 . -9) (undo-tree-id2940 . -9) (2672 . 2673)) ((#("
" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2672) (2663 . 2672) (#("         " 0 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2664) (#("         " 0 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2663) (undo-tree-id4065 . -9) (undo-tree-id4066 . -9) (undo-tree-id4067 . -9) (undo-tree-id4068 . -9) (undo-tree-id4069 . -9) (undo-tree-id4070 . -9) (undo-tree-id4071 . -9) (undo-tree-id4072 . -9) (undo-tree-id4073 . -9) (undo-tree-id4074 . -9) (undo-tree-id4075 . -9) (undo-tree-id4076 . -9) (undo-tree-id4077 . -9) (undo-tree-id4078 . -9) (undo-tree-id4079 . -9) (undo-tree-id4080 . -9) (undo-tree-id4081 . -9) (undo-tree-id4082 . -9) (undo-tree-id4083 . -9) (undo-tree-id4084 . -9) (undo-tree-id4085 . -9) (undo-tree-id4086 . -9) (undo-tree-id4087 . -9) (undo-tree-id4088 . -9) (undo-tree-id4089 . -9) (undo-tree-id4090 . -9) (undo-tree-id4091 . -9) (undo-tree-id4092 . -9) (undo-tree-id4093 . -9) (#("(println \"JMR read-f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 1 8 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t face font-lock-function-name-face) 8 9 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 9 19 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face font-lock-multiline t) 19 20 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face)) . 2672) (undo-tree-id4094 . -5) (undo-tree-id4095 . -5) (undo-tree-id4096 . -5) (undo-tree-id4097 . -5) (undo-tree-id4098 . -5) (undo-tree-id4099 . -5) (undo-tree-id4100 . -5) (undo-tree-id4101 . -5) (undo-tree-id4102 . -5) (undo-tree-id4103 . -5) (undo-tree-id4104 . -5) (undo-tree-id4105 . -5) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -5) (undo-tree-id4110 . -5) (undo-tree-id4111 . -5) (undo-tree-id4112 . -5) (undo-tree-id4113 . -5) (undo-tree-id4114 . -5) (undo-tree-id4115 . -5) (undo-tree-id4116 . -5) (undo-tree-id4117 . -5) (undo-tree-id4118 . -5) (undo-tree-id4119 . -5) (undo-tree-id4120 . -5) (undo-tree-id4121 . -5) (undo-tree-id4122 . -5) (2691 . 2692) (#("fi" 0 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face font-lock-multiline t)) . 2691) (#("le\")f" 0 3 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face font-lock-multiline t) 3 4 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 4 5 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2693) (2697 . 2698)) (26059 37212 174953 0) 0 nil])
([nil nil ((#("       (println \"JMR read-file\" path)
" 0 16 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 16 31 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face font-lock-multiline t) 31 36 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 36 37 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 37 38 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2502) (undo-tree-id1840 . -37) (undo-tree-id1841 . -36) (undo-tree-id1842 . -38) (undo-tree-id1843 . -38) (undo-tree-id1844 . -38) (undo-tree-id1845 . -38) (undo-tree-id1846 . -38) (undo-tree-id1847 . -38) (undo-tree-id1848 . -38) (undo-tree-id1849 . -38) (undo-tree-id1850 . -38) (undo-tree-id1851 . -38) (undo-tree-id1852 . -38) (undo-tree-id1853 . -38) (undo-tree-id1854 . -38) (undo-tree-id1855 . -38) (undo-tree-id1856 . -38) (undo-tree-id1857 . -38) (undo-tree-id1858 . -38) (undo-tree-id1859 . -38) (undo-tree-id1860 . -38) (undo-tree-id1861 . -38) (undo-tree-id1862 . -38) (undo-tree-id1863 . -36) (undo-tree-id1864 . -36) (undo-tree-id1865 . -36) (undo-tree-id1866 . -36) (undo-tree-id1867 . -36) (undo-tree-id1868 . -36) (undo-tree-id1869 . -36) (undo-tree-id1870 . -36) (undo-tree-id1871 . 2) (undo-tree-id1872 . -37) (undo-tree-id1873 . 31) (undo-tree-id1874 . -8) (undo-tree-id1875 . -36) (undo-tree-id1876 . -36) (undo-tree-id1877 . -36) (undo-tree-id1878 . -36) (undo-tree-id1879 . -36) (undo-tree-id1880 . -36) (undo-tree-id1881 . -36) (undo-tree-id1882 . -36) (undo-tree-id1883 . -36) (undo-tree-id1884 . -36) (undo-tree-id1885 . -36) (undo-tree-id1886 . -36) (undo-tree-id1887 . -36) (undo-tree-id1888 . -36) (undo-tree-id1889 . -36) (undo-tree-id1890 . -36) (undo-tree-id1891 . -36) (undo-tree-id1892 . -36) (undo-tree-id1893 . -36) (undo-tree-id1894 . -36) (undo-tree-id1895 . -36) (undo-tree-id1896 . -36) (undo-tree-id1897 . -38) (undo-tree-id1898 . -38) 2538) ((2502 . 2540) (t 26059 36220 492564 82000)) (26059 36220 490277 0) 0 nil])
([nil nil ((#("       (println \"JMR read-file\" path)
" 0 16 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 16 31 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") face font-lock-string-face font-lock-multiline t) 31 36 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 36 37 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t) 37 38 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path") font-lock-multiline t)) . 2528) (undo-tree-id2138 . -37) (undo-tree-id2140 . -38) (undo-tree-id2142 . -38) (undo-tree-id2144 . -38) (undo-tree-id2146 . -38) (undo-tree-id2148 . -38) (undo-tree-id2150 . -38) (undo-tree-id2152 . -38) (undo-tree-id2154 . -38) (undo-tree-id2156 . -38) (undo-tree-id2158 . -38) (undo-tree-id2160 . -36) (undo-tree-id2162 . -36) (undo-tree-id2164 . -36) (undo-tree-id2166 . -36) (undo-tree-id2168 . -36) (undo-tree-id2170 . -36) (undo-tree-id2172 . -36) (undo-tree-id2174 . -36) (undo-tree-id2176 . -36) (undo-tree-id2178 . -36) (undo-tree-id2180 . -36) (undo-tree-id2182 . -36) (undo-tree-id2184 . -36) (undo-tree-id2186 . -36) (undo-tree-id2188 . -36) (undo-tree-id2190 . -36) (undo-tree-id2192 . -36) (undo-tree-id2194 . -36) (undo-tree-id2196 . -36) (undo-tree-id2198 . -36) (undo-tree-id2200 . -36) (undo-tree-id2202 . -36) (undo-tree-id2204 . -36) (undo-tree-id2206 . -36) (undo-tree-id2208 . -36) (undo-tree-id2210 . -36) (undo-tree-id2211 . -33) (undo-tree-id2213 . -1) (undo-tree-id2215 . -1) (undo-tree-id2217 . -1) (undo-tree-id2219 . -1) (undo-tree-id2221 . -1) (undo-tree-id2223 . -1) (undo-tree-id2225 . -1) (undo-tree-id2227 . -2) (undo-tree-id2229 . -2) (undo-tree-id2231 . -2) (undo-tree-id2233 . -2) (undo-tree-id2235 . -3) (undo-tree-id2237 . -3) (undo-tree-id2239 . -3) (undo-tree-id2241 . -3) (undo-tree-id2243 . -4) (undo-tree-id2245 . -4) (undo-tree-id2247 . -4) (undo-tree-id2249 . -4) (undo-tree-id2251 . -5) (undo-tree-id2253 . -5) (undo-tree-id2255 . -5) (undo-tree-id2257 . -5) (undo-tree-id2259 . -6) (undo-tree-id2261 . -6) (undo-tree-id2263 . -6) (undo-tree-id2265 . -6) (undo-tree-id2267 . -6) (undo-tree-id2269 . -6) (undo-tree-id2271 . -6) (undo-tree-id2273 . -6) (undo-tree-id2275 . -6) (undo-tree-id2277 . -6) (undo-tree-id2279 . -6) (undo-tree-id2281 . -6) (undo-tree-id2283 . -6) (undo-tree-id2285 . -6) (undo-tree-id2287 . -6) (undo-tree-id2289 . -7) (undo-tree-id2291 . -7) (undo-tree-id2293 . -7) (undo-tree-id2295 . -7) (undo-tree-id2297 . -7) (undo-tree-id2299 . -7) (undo-tree-id2301 . -7) (undo-tree-id2303 . -7) (undo-tree-id2305 . -7) (undo-tree-id2307 . -7) (undo-tree-id2309 . -7) (undo-tree-id2311 . -7) (undo-tree-id2313 . -7) (undo-tree-id2315 . -7) (undo-tree-id2317 . -7) (undo-tree-id2319 . -7) (undo-tree-id2321 . -7) (undo-tree-id2323 . -7) (undo-tree-id2325 . -7) (undo-tree-id2327 . -7) (undo-tree-id2329 . -7) (undo-tree-id2331 . -7) (undo-tree-id2333 . -7) (undo-tree-id2335 . -7) (undo-tree-id2337 . -7) (undo-tree-id2339 . -7) (undo-tree-id2341 . -7) (undo-tree-id2343 . -7) (undo-tree-id2345 . -7) (undo-tree-id2347 . -7) (undo-tree-id2349 . -7) (undo-tree-id2351 . -7) (undo-tree-id2353 . -7) (undo-tree-id2355 . -7) (undo-tree-id2357 . -7) (undo-tree-id2359 . -7) (undo-tree-id2361 . -7) (undo-tree-id2363 . -7) (undo-tree-id2365 . -7) (undo-tree-id2367 . -7) (undo-tree-id2369 . -7) (undo-tree-id2371 . -7) (undo-tree-id2373 . -7) (undo-tree-id2375 . -7) (undo-tree-id2377 . -7) (undo-tree-id2379 . -7) (undo-tree-id2381 . -7) (undo-tree-id2383 . -7) (undo-tree-id2385 . -7) (undo-tree-id2387 . -7) (undo-tree-id2389 . -7) (undo-tree-id2391 . -7) (undo-tree-id2393 . -7) (undo-tree-id2395 . -7) (undo-tree-id2397 . -7) (undo-tree-id2399 . -7) (undo-tree-id2401 . -7) (undo-tree-id2403 . -7) (undo-tree-id2405 . -7) (undo-tree-id2407 . -7) (undo-tree-id2409 . -7) (undo-tree-id2411 . -7) (undo-tree-id2413 . -7) (undo-tree-id2415 . -7) (undo-tree-id2417 . -7) (undo-tree-id2419 . -7) (undo-tree-id2421 . -7) (undo-tree-id2423 . -7) (undo-tree-id2425 . -7) (undo-tree-id2427 . -7) (undo-tree-id2429 . -7) (undo-tree-id2431 . -7) (undo-tree-id2433 . -7) (undo-tree-id2435 . -7) (undo-tree-id2437 . -7) (undo-tree-id2439 . -7) (undo-tree-id2441 . -7) (undo-tree-id2443 . -7) (undo-tree-id2445 . -7) (undo-tree-id2447 . -7) (undo-tree-id2449 . -7) (undo-tree-id2451 . -7) (undo-tree-id2453 . -7) (undo-tree-id2455 . -7) (undo-tree-id2457 . -7) (undo-tree-id2459 . -7) (undo-tree-id2461 . -7) (undo-tree-id2463 . -7) (undo-tree-id2465 . -7) (undo-tree-id2467 . -7) (undo-tree-id2469 . -7) (undo-tree-id2471 . -7) (undo-tree-id2473 . -7) (undo-tree-id2475 . -7) (undo-tree-id2477 . -7) (undo-tree-id2479 . -7) (undo-tree-id2481 . -7) (undo-tree-id2483 . -7) (undo-tree-id2485 . -7) (undo-tree-id2487 . -7) (undo-tree-id2489 . -7) (undo-tree-id2491 . -7) (undo-tree-id2493 . -7) (undo-tree-id2495 . -7) (undo-tree-id2497 . -7) (undo-tree-id2499 . -7) (undo-tree-id2501 . -7) (undo-tree-id2503 . -7) (undo-tree-id2505 . -7) (undo-tree-id2507 . -7) (undo-tree-id2509 . -7) (undo-tree-id2511 . -7) (undo-tree-id2513 . -7) (undo-tree-id2515 . -7) (undo-tree-id2517 . -7) (undo-tree-id2519 . -7) (undo-tree-id2521 . -7) (undo-tree-id2523 . -7) (undo-tree-id2525 . -7) (undo-tree-id2527 . -7) (undo-tree-id2529 . -7) (undo-tree-id2531 . -7) (undo-tree-id2533 . -7) (undo-tree-id2535 . -7) (undo-tree-id2537 . -7) (undo-tree-id2539 . -7) (undo-tree-id2541 . -7) (undo-tree-id2543 . -7) (undo-tree-id2545 . -7) (undo-tree-id2547 . -7) (undo-tree-id2549 . -7) (undo-tree-id2551 . -7) (undo-tree-id2553 . -7) (undo-tree-id2555 . -7) (undo-tree-id2557 . -7) (undo-tree-id2559 . -7) (undo-tree-id2561 . -7) (undo-tree-id2563 . -7) (undo-tree-id2565 . -7) (undo-tree-id2567 . -7) (undo-tree-id2569 . -7) (undo-tree-id2571 . -7) (undo-tree-id2573 . -7) (undo-tree-id2575 . -7) (undo-tree-id2577 . -7) (undo-tree-id2579 . -7) (undo-tree-id2581 . -7) (undo-tree-id2583 . -7) (undo-tree-id2585 . -7) (undo-tree-id2587 . -7) (undo-tree-id2589 . -7) (undo-tree-id2591 . -7) (undo-tree-id2593 . -7) (undo-tree-id2595 . -7) (undo-tree-id2597 . -7) (undo-tree-id2599 . -7) (undo-tree-id2601 . -7) (undo-tree-id2603 . -7) (undo-tree-id2605 . -7) (undo-tree-id2607 . -7) (undo-tree-id2609 . -7) (undo-tree-id2611 . -38) (undo-tree-id2613 . -38) (undo-tree-id2615 . -38) (undo-tree-id2617 . -38) (undo-tree-id2619 . -33) (undo-tree-id2621 . -33) (undo-tree-id2623 . -33) (undo-tree-id2625 . -33) (undo-tree-id2627 . -33) (undo-tree-id2629 . -33) (undo-tree-id2631 . -33) (undo-tree-id2633 . -33) (undo-tree-id2635 . -33) (undo-tree-id2637 . -33) (undo-tree-id2639 . -33) (undo-tree-id2641 . -33) (undo-tree-id2643 . -33) (undo-tree-id2645 . -33) (undo-tree-id2647 . -38) 2561) ((2528 . 2566)) (26059 37211 652259 0) 0 nil])
nil
([nil nil ((#("         (println \"JMR read-file\")
" 0 18 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 18 33 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") face font-lock-string-face font-lock-multiline t) 33 34 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t) 34 35 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "xout" "xin") font-lock-multiline t)) . 2625) (undo-tree-id3461 . 1) (undo-tree-id3462 . -34) (undo-tree-id3463 . -14) (undo-tree-id3465 . -28) (undo-tree-id3467 . -28) (undo-tree-id3469 . -28) (undo-tree-id3471 . -28) (undo-tree-id3473 . -34) (undo-tree-id3475 . -34) (undo-tree-id3477 . -34) (undo-tree-id3479 . -34) (undo-tree-id3481 . -14) (undo-tree-id3483 . -14) (undo-tree-id3485 . -14) (undo-tree-id3487 . -14) (undo-tree-id3489 . -14) (undo-tree-id3491 . -14) (undo-tree-id3493 . -14) (undo-tree-id3495 . -14) (undo-tree-id3497 . -14) (undo-tree-id3499 . -14) (undo-tree-id3501 . -14) (undo-tree-id3503 . -14) (undo-tree-id3505 . -14) (undo-tree-id3507 . -14) (undo-tree-id3509 . -35) 2639 (t 26059 36335 650901 785000)) ((2625 . 2660)) (26059 37211 339754 0) 0 nil])
([nil nil ((#("(ByteArrayOutputStream.)
" 0 23 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path")) 23 24 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path")) 24 25 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path"))) . 2382) (undo-tree-id3314 . -1) (undo-tree-id3315 . 1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -24) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3322 . -24) (undo-tree-id3324 . -1) (undo-tree-id3326 . -1) (undo-tree-id3328 . -1) (undo-tree-id3330 . -1) (undo-tree-id3332 . -1) (undo-tree-id3334 . -1) (undo-tree-id3336 . -1) (undo-tree-id3338 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) (undo-tree-id3344 . -1) (undo-tree-id3346 . -1) (undo-tree-id3348 . -1) (undo-tree-id3350 . -1) (undo-tree-id3352 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -24) (undo-tree-id3356 . -1) (undo-tree-id3358 . -1) (undo-tree-id3360 . -1) (undo-tree-id3362 . -1) (undo-tree-id3364 . -1) (undo-tree-id3366 . -1) (undo-tree-id3368 . -1) (undo-tree-id3370 . -1) (undo-tree-id3372 . -1) (undo-tree-id3374 . -1) (undo-tree-id3376 . -1) (undo-tree-id3378 . -1) (undo-tree-id3380 . -1) (undo-tree-id3382 . -1) (undo-tree-id3384 . -1) (undo-tree-id3386 . -1) (undo-tree-id3388 . -1) (undo-tree-id3390 . -1) (undo-tree-id3392 . -1) (undo-tree-id3394 . -2) (undo-tree-id3396 . -2) (undo-tree-id3398 . -2) (undo-tree-id3400 . -2) (undo-tree-id3402 . -2) (undo-tree-id3404 . -2) (undo-tree-id3406 . -2) (undo-tree-id3408 . -2) (undo-tree-id3410 . -2) (undo-tree-id3412 . -2) (undo-tree-id3414 . -2) (undo-tree-id3416 . -10) (undo-tree-id3418 . -10) (undo-tree-id3420 . -10) (undo-tree-id3422 . -10) (undo-tree-id3424 . -10) (undo-tree-id3426 . -10) (undo-tree-id3428 . -10) (undo-tree-id3430 . -10) (undo-tree-id3432 . -23) (undo-tree-id3434 . -23) (undo-tree-id3436 . -23) (undo-tree-id3438 . -23) (undo-tree-id3440 . -1) (undo-tree-id3442 . -25) (undo-tree-id3444 . -25) (undo-tree-id3446 . -25) (undo-tree-id3448 . -25) (undo-tree-id3450 . -25) (undo-tree-id3452 . -25) (undo-tree-id3454 . -25) (undo-tree-id3455 . 25) (undo-tree-id3456 . -1) (undo-tree-id3457 . 2) (undo-tree-id3458 . -24) (undo-tree-id3460 . -25)) ((2382 . 2407)) (26059 37211 164610 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . -2381) (undo-tree-id3068 . -1) (undo-tree-id3070 . -1) (undo-tree-id3072 . -1) (undo-tree-id3074 . -1) (undo-tree-id3076 . -1) (2381 . 2382) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path"))) . -2381) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3086 . -1) (undo-tree-id3088 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3096 . -1) (undo-tree-id3098 . -1) (undo-tree-id3100 . -1) (undo-tree-id3102 . -1) (undo-tree-id3104 . -1) (undo-tree-id3106 . -1) (undo-tree-id3108 . -1) (undo-tree-id3110 . -1) (undo-tree-id3112 . -1) (undo-tree-id3114 . -1) (undo-tree-id3116 . -1) (undo-tree-id3118 . -1) (undo-tree-id3120 . -1) (undo-tree-id3122 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3127 . -1) (undo-tree-id3129 . -1) (undo-tree-id3131 . -1) (undo-tree-id3133 . -1) (undo-tree-id3135 . -1) (undo-tree-id3137 . -1) (undo-tree-id3139 . -1) (undo-tree-id3141 . -1) (undo-tree-id3143 . -1) (undo-tree-id3145 . -1) (undo-tree-id3147 . -1) (undo-tree-id3149 . -1) (undo-tree-id3151 . -1) (undo-tree-id3153 . -1) (undo-tree-id3155 . -1) (undo-tree-id3157 . -1) (undo-tree-id3159 . -1) (undo-tree-id3161 . -1) (undo-tree-id3163 . -1) (undo-tree-id3165 . -1) (undo-tree-id3167 . -1) (undo-tree-id3169 . -1) (undo-tree-id3171 . -1) (undo-tree-id3173 . -1) (undo-tree-id3175 . -1) (undo-tree-id3177 . -1) (undo-tree-id3179 . -1) (undo-tree-id3181 . -1) (undo-tree-id3183 . -1) (undo-tree-id3185 . -1) (undo-tree-id3187 . -1) (undo-tree-id3189 . -1) (undo-tree-id3191 . -1) (undo-tree-id3193 . -1) (undo-tree-id3195 . -1) (undo-tree-id3197 . -1) (undo-tree-id3199 . -1) (undo-tree-id3201 . -1) (undo-tree-id3203 . -1) (undo-tree-id3205 . -1) (undo-tree-id3207 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3212 . -1) (undo-tree-id3214 . -1) (undo-tree-id3216 . -1) (undo-tree-id3218 . -1) (undo-tree-id3220 . -1) (undo-tree-id3222 . -1) (undo-tree-id3224 . -1) (undo-tree-id3226 . -1) (undo-tree-id3228 . -1) (undo-tree-id3230 . -1) (undo-tree-id3232 . -1) (undo-tree-id3234 . -1) (undo-tree-id3236 . -1) (undo-tree-id3238 . -1) (undo-tree-id3240 . -1) (undo-tree-id3242 . -1) (undo-tree-id3244 . -1) (undo-tree-id3246 . -1) (undo-tree-id3248 . -1) (undo-tree-id3250 . -1) (undo-tree-id3252 . -1) (undo-tree-id3254 . -1) (undo-tree-id3256 . -1) (undo-tree-id3258 . -1) (undo-tree-id3260 . -1) (undo-tree-id3262 . -1) (undo-tree-id3264 . -1) (undo-tree-id3266 . -1) (undo-tree-id3268 . -1) (undo-tree-id3270 . -1) (undo-tree-id3272 . -1) (undo-tree-id3274 . -1) (undo-tree-id3276 . -1) (undo-tree-id3278 . -1) (undo-tree-id3280 . -1) (undo-tree-id3282 . -1) (undo-tree-id3284 . -1) (undo-tree-id3286 . -1) (undo-tree-id3288 . -1) (undo-tree-id3290 . -1) (undo-tree-id3292 . -1) (undo-tree-id3294 . -1) (undo-tree-id3296 . -1) (undo-tree-id3298 . -1) (undo-tree-id3300 . -1) (undo-tree-id3302 . -1) (undo-tree-id3304 . -1) (undo-tree-id3306 . -1) (undo-tree-id3308 . -1) (undo-tree-id3310 . -1) (undo-tree-id3312 . -1) 2382) ((2381 . 2382) (#("f" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("val" "bytes" "path"))) . 2381) (2381 . 2382)) (26059 37210 955191 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3732) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (3731 . 3733) (t 26059 36364 488055 633000)) ((#("
f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . 3731) (undo-tree-id3821 . -2) (undo-tree-id3822 . -2) (undo-tree-id3823 . -2) (undo-tree-id3824 . -2) (undo-tree-id3825 . -2) (undo-tree-id3826 . -2) (undo-tree-id3827 . -2) (undo-tree-id3828 . -2) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (3732 . 3733)) (26059 37210 603104 0) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3731) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (3731 . 3732) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3731) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . -3732) (undo-tree-id3793 . 1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) 3733 (t 26059 37184 992645 549000)) ((3731 . 3733) (#("f" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . 3731) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (3731 . 3732)) (26059 37210 228933 0) 0 nil])
([nil nil ((3731 . 3732) 3730) ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("val" "bytes" "path" "path" "path" "abs-root" "abs-path?"))) . 3731) (t 26059 37190 996361 736000)) (26059 37190 992945 0) 0 nil])
nil
